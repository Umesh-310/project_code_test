--
-- PostgreSQL database dump
--

-- Dumped from database version 14.8 (Ubuntu 14.8-1.pgdg22.04+1)
-- Dumped by pg_dump version 15.3 (Ubuntu 15.3-1.pgdg22.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: postgres
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: account_user; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.account_user (
    last_login timestamp with time zone,
    id uuid NOT NULL,
    email character varying(255) NOT NULL,
    name character varying(200) NOT NULL,
    mobile character varying(14),
    about text,
    user_type character varying(10) NOT NULL,
    image character varying(100),
    password character varying(100) NOT NULL,
    github_profile text,
    linkedin_profile text,
    is_active boolean NOT NULL,
    is_admin boolean NOT NULL,
    is_author boolean NOT NULL,
    is_examiner boolean NOT NULL,
    is_attendee boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL
);


ALTER TABLE public.account_user OWNER TO linuxhint;

--
-- Name: attendee_attendexam; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.attendee_attendexam (
    is_deleted boolean NOT NULL,
    deleted_at timestamp with time zone,
    id uuid NOT NULL,
    total_cheat integer NOT NULL,
    total_mark integer NOT NULL,
    percent_mark integer NOT NULL,
    start_time timestamp with time zone,
    end_time timestamp with time zone,
    video character varying(100),
    submited_at timestamp with time zone,
    is_submited boolean NOT NULL,
    is_qualified boolean,
    is_active boolean NOT NULL,
    is_updated boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    attendee_id uuid NOT NULL,
    exam_id uuid,
    status character varying(20) NOT NULL
);


ALTER TABLE public.attendee_attendexam OWNER TO linuxhint;

--
-- Name: attendee_attendquestion; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.attendee_attendquestion (
    is_deleted boolean NOT NULL,
    deleted_at timestamp with time zone,
    id uuid NOT NULL,
    number integer NOT NULL,
    language character varying(20) NOT NULL,
    answer text,
    answer_recorded_at timestamp with time zone,
    total_passed_testcase integer,
    total_mark integer,
    percent_mark integer,
    submited_at timestamp with time zone,
    is_submited boolean NOT NULL,
    is_atended boolean NOT NULL,
    is_active boolean NOT NULL,
    is_updated boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    attend_exam_id uuid,
    question_id uuid,
    javascript_code text,
    python_code text
);


ALTER TABLE public.attendee_attendquestion OWNER TO linuxhint;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO linuxhint;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: linuxhint
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO linuxhint;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: linuxhint
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO linuxhint;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: linuxhint
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: author_question; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.author_question (
    is_deleted boolean NOT NULL,
    deleted_at timestamp with time zone,
    id uuid NOT NULL,
    title character varying(100) NOT NULL,
    description text,
    example text,
    level character varying(10) NOT NULL,
    javascript_init_code text,
    is_private boolean NOT NULL,
    is_active boolean NOT NULL,
    is_updated boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    created_by_id uuid NOT NULL,
    python_init_code text
);


ALTER TABLE public.author_question OWNER TO linuxhint;

--
-- Name: author_testcase; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.author_testcase (
    is_deleted boolean NOT NULL,
    deleted_at timestamp with time zone,
    id uuid NOT NULL,
    number integer NOT NULL,
    input text,
    output text,
    is_private boolean NOT NULL,
    is_active boolean NOT NULL,
    is_updated boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    question_id uuid NOT NULL
);


ALTER TABLE public.author_testcase OWNER TO linuxhint;

--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id uuid NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO linuxhint;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: linuxhint
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO linuxhint;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: linuxhint
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO linuxhint;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: linuxhint
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO linuxhint;

--
-- Name: examiner_exam; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.examiner_exam (
    is_deleted boolean NOT NULL,
    deleted_at timestamp with time zone,
    id uuid NOT NULL,
    title character varying(100) NOT NULL,
    description text,
    passing_percent_mark integer NOT NULL,
    start_time timestamp with time zone,
    end_time timestamp with time zone,
    exam_link text,
    is_time_limit boolean NOT NULL,
    time_limit_hour integer NOT NULL,
    time_limit_minute integer NOT NULL,
    total_question integer NOT NULL,
    is_active boolean NOT NULL,
    is_updated boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    created_by_id uuid
);


ALTER TABLE public.examiner_exam OWNER TO linuxhint;

--
-- Name: examiner_examquestion; Type: TABLE; Schema: public; Owner: linuxhint
--

CREATE TABLE public.examiner_examquestion (
    is_deleted boolean NOT NULL,
    deleted_at timestamp with time zone,
    id uuid NOT NULL,
    number integer NOT NULL,
    is_active boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    exam_id uuid NOT NULL,
    question_id uuid NOT NULL
);


ALTER TABLE public.examiner_examquestion OWNER TO linuxhint;

--
-- Data for Name: account_user; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.account_user (last_login, id, email, name, mobile, about, user_type, image, password, github_profile, linkedin_profile, is_active, is_admin, is_author, is_examiner, is_attendee, created_at, updated_at) FROM stdin;
\N	248e3a05-457c-4058-b0a3-6232c35638f5	niki@gmail.com	Niki	\N	\N	User		pbkdf2_sha256$390000$TGozrIQTtAkBt8lzG5UZMr$tf8oQoKX80DVgz1CsE+oGcomFlcSy70PlLuj6umy26E=	\N	\N	t	f	f	f	t	2023-05-05 14:17:24.575+05:30	2023-05-09 09:36:34.584+05:30
\N	30d2a4bc-46eb-4c3f-aea5-cd38546fb890	aneesh@gmail.com	Aneesh Chali	\N	\N	User		pbkdf2_sha256$390000$u8yZiwgxbAuG4Yb3lon0wk$vRNi4fWb0fYvTiPfGp9QoW5fyjUenBY44TM2u2KfOKI=	\N	\N	t	f	f	f	t	2023-05-12 13:53:15.858+05:30	2023-05-12 13:53:15.858+05:30
\N	3651a537-6d56-4f9f-8813-b1295e31c330	chandani@gmail.com	Chandani	\N	\N	User		pbkdf2_sha256$390000$Y9XBMsGB69bxtTUwNOJ9Gw$GsKRkqLpWPdqelnwtCud9KX9+Qkjs4FHRo06SOjtYGk=	\N	\N	t	f	f	f	t	2023-04-24 10:33:14.139+05:30	2023-05-29 09:03:30.927+05:30
\N	371913b9-980b-4118-9867-b6ce0ad594b3	singh.chandani.dcs23@vnsgu.ac.in	Chandani Singh	8989898989	I am Chandani Harendra Singh from LaNetTeam	User	account_images/Chandani_Singh1682655784156.png	pbkdf2_sha256$600000$1MPGG22j0WNMr5cPkecOB8$PoH2P83k/uSQbMy8oP8nTArwXMWhX2pkZ7b5QCdYMs4=	https://github.com/ChandaniHSingh/	linkedin.com	t	f	t	t	t	2023-04-04 10:51:55.155+05:30	2023-05-29 13:48:33.181+05:30
\N	42f26e9a-b1c4-4ac3-ae94-82a503753e15	krutika@gmail.com	Krutika	\N	\N	User		pbkdf2_sha256$390000$E8xWBNcnrOqN98fB3zUEKx$gf3SuvVH0MpxRMoyDEi+srgPJz+qh9kBcNN1DfuVhpQ=	\N	\N	t	f	f	f	t	2023-04-28 08:32:01.285+05:30	2023-05-05 14:13:43.108+05:30
\N	4e4f8093-4621-49c9-a1f1-2f081c08bd90	abhay@gmail.com	Abhay	\N	\N	User		pbkdf2_sha256$390000$bPvNJbEqqKKeUbC0uEkKq5$wD13E0l2k08sNRzsM4CrTJO5Ck647ywGOH6C0DGIbIw=	\N	\N	t	f	f	f	t	2023-05-05 15:56:48.257+05:30	2023-05-05 15:56:48.257+05:30
\N	55b300ed-e062-47eb-9aae-f0cc1c77a539	aman@gmail.com	Aman	\N	\N	User		pbkdf2_sha256$390000$SpJaBr4PMPGqBhXGl6MAzG$KOBI/6VxfiyDy7Jbvr8TNNdfiymGLhBxOXaCc3hQOuY=	\N	\N	t	f	f	f	t	2023-05-05 14:11:47.362+05:30	2023-05-05 14:11:47.362+05:30
\N	6ad94f56-bc5e-4a8c-b127-4320088d2b22	ok@gmail.com	ok	\N	\N	User		pbkdf2_sha256$390000$LtbHqtXUibnESyUtucM5XC$Ov5JNUDikK9lRCg2ezCRKGfrxnbcAnLK6LosIwGdbUk=	\N	\N	t	f	f	f	t	2023-05-05 14:14:51.291+05:30	2023-05-05 15:53:48.96+05:30
\N	6d2da44a-6f20-4410-9cb8-95b5ab7373fd	priya@gmail.com	Priya Kejriwal	\N	\N	User		pbkdf2_sha256$390000$bsYcSEyMurvoUJSMfaEB0Z$i7DxCpZE7LhUKc8NbkzukvYN+O5FfwZ3F9EYS7L1Bjo=	\N	\N	t	f	f	f	t	2023-04-28 10:20:37.049+05:30	2023-04-29 09:17:04.582+05:30
\N	70ccb4c2-4c54-4638-b83e-7409f1437fb0	kk@gmail.com	kk	\N	\N	User		pbkdf2_sha256$390000$GY6Q2fGaWGQOYsyJUjuxFR$7GNdKOBXn2gzvlCZUnLpkalnl6IOY7OgjmTiuDtQiy4=	\N	\N	t	f	f	f	t	2023-05-05 14:20:43.575+05:30	2023-05-05 14:20:43.575+05:30
\N	7d230545-ea91-4fc7-a876-46a7f9f3d3a5	raj@gmail.com	Raj	\N	\N	User		pbkdf2_sha256$390000$2wcOOpwU2yGvq4J2BrGlDN$csHqC86SSGHKtCdxlL5cl0Ely06hv6+FPiFve8Lh0m0=	\N	\N	t	f	f	f	t	2023-04-26 11:54:41.437+05:30	2023-05-05 15:46:41.924+05:30
\N	932c3c42-eeac-4238-b780-2a47483e0973	abc@gmail.com	ABC	\N	\N	User		pbkdf2_sha256$600000$Ys6pgXrajOdkmoGlznrZ0s$odRVxlXHee1dcOaZZY4zZ5FNexdgYUcyzNxQU6DToIg=	\N	\N	t	f	f	f	t	2023-05-29 13:47:36.235+05:30	2023-05-29 13:47:36.235+05:30
\N	93bacc3f-fa2a-4938-82f3-b09f7966187a	okk@gmail.com	okk	\N	\N	User		pbkdf2_sha256$390000$jmAtajoViGYSMdavWYLmht$miozQ9FutrtBW+b+DEMCmEDs7XDAGWV/WLtuPKHl7yw=	\N	\N	t	f	f	f	t	2023-05-05 14:16:13.407+05:30	2023-05-05 14:16:13.407+05:30
2023-05-05 12:27:08.517+05:30	97ca9879-5893-4021-9f4e-986182506ae5	admin@gmail.com	Admin	\N		Admin	media/account_images/card_glrcgv	pbkdf2_sha256$390000$ma38ANeejvrfv2JDTvecaX$GYXdN5OqJYK8K+13rEmkOu2/OB/i5lIl0I6OEEVyz0k=	\N	\N	t	t	t	t	f	2023-04-04 10:51:17.442+05:30	2023-04-28 13:06:56.778+05:30
\N	9ea8fae4-7a26-4e89-8461-b2394347d0ac	hii@gmail.com	hii	\N	\N	User		pbkdf2_sha256$390000$KwSVBS9VbwK4UTIv3ksgtl$D5zDyvKdbspVaWf8PFkBIcoPofLRZzKRHQ6iVo+KvNc=	\N	\N	t	f	f	f	t	2023-05-05 16:03:46.396+05:30	2023-05-05 16:03:46.396+05:30
\N	a20420b2-f94d-46bd-a9de-bb3a86b1507b	aa@gmail.com	aa	\N	\N	User		pbkdf2_sha256$390000$ehFiWqYe9zzMZGQrSPthPA$dw/TZ0Mj69YXHVmyI3eodBqqoxtSiU+DD2T2qYp3p2U=	\N	\N	t	f	f	f	t	2023-05-05 14:18:35.759+05:30	2023-05-05 14:19:55.727+05:30
\N	a2dc29e1-91ec-4e3d-a391-21bd320e5c89	vijay@gmail.com	Vijay	\N	\N	User		pbkdf2_sha256$390000$KP08GxlN2hpjQwzJeG4nq7$l14ltBY/RvWPT/Xors5s37PMkccmJNZsRXroAApxXiI=	\N	\N	t	f	f	f	t	2023-05-05 15:52:29.831+05:30	2023-05-05 15:52:29.831+05:30
\N	a4153977-6ef4-46e0-8d65-ec167960831a	mini@gmail.com	mini	\N	\N	User		pbkdf2_sha256$390000$Vlnyo0hoVdoV2J6QNT0lbP$b0+wCmQw4M9y6Q+wjReYqHVOfcq98YOgO5tCwCO+bBY=	\N	\N	t	f	f	f	t	2023-05-05 16:09:52.609+05:30	2023-05-05 16:09:52.609+05:30
\N	b21dce25-37f5-4af3-88fd-4567431ff5fa	nikita@gmail.com	nikita	null		User	account_images/Nikita_Patel1682738660410.png	pbkdf2_sha256$390000$SJTpfI1znZ6ClvFN5NwZ4U$eoc+Ju5bJ9O4KKkYGM12Hh78zKxEJmQqM6HMC++MLwg=	null	null	t	f	t	t	t	2023-04-24 12:58:34.627+05:30	2023-05-05 16:44:55.126+05:30
\N	b6f6a9a4-2daa-4124-8036-ef6ea3e5e2d2	ruchika@gmail.com	Ruchika	\N	\N	User		pbkdf2_sha256$390000$xDgFa4jeAqhxIevWRqFA59$dAgDgAaZmqHBq4vCmGXDlDtpUCzkkmuZG0RvZ8G3hH4=	\N	\N	t	f	f	f	t	2023-04-29 09:20:37.806+05:30	2023-04-29 09:31:58.628+05:30
\N	baa1def2-f7d1-43dd-a1f2-af91e6c19b9b	ss@gmail.com	ss	\N	\N	User		pbkdf2_sha256$390000$75J3KPdndV7pY9xqsCaocJ$SI33eJbc4cCNs47szXe3wf2sqMhZJ9yiig4qqlZrUtA=	\N	\N	t	f	f	f	t	2023-05-12 13:55:04.588+05:30	2023-05-12 13:56:29.707+05:30
\N	c0366bd2-fc9f-46d0-a0f9-cd128677469a	hello@gmail.com	hello	\N	\N	User		pbkdf2_sha256$390000$q9AUf5M8IOL7cqpXyN17XY$O5W2dAuVTM5kff+PzLKFg4JaWouDaDjNO+f7pMo5CNk=	\N	\N	t	f	f	f	t	2023-05-05 16:06:40.185+05:30	2023-05-05 16:06:40.185+05:30
\N	e479b929-6719-4073-85ce-0209b7917680	ajay@gmail.com	Ajay Kapuriya	\N	\N	User		pbkdf2_sha256$390000$s3Y35k4W8ulF10YteZZBAy$6jGUxst+K8yIOsZk/UypXgikl9o5YPlKtBN4lW7+ekY=	\N	\N	t	f	f	f	t	2023-04-25 10:11:37.606+05:30	2023-04-29 09:15:00.964+05:30
\N	f0127707-7a14-4ad0-8936-e7d233c820ba	suraj@gmail.com	Suraj	\N	\N	User		pbkdf2_sha256$390000$hVodgvoWxFIwSLQwLJVqLf$gD4nt9i4LCT1SbaXqKD2UV0aZLO18MWLNVOKVWZF6Yg=	\N	\N	t	f	f	f	t	2023-05-05 16:08:06.122+05:30	2023-05-05 16:08:06.122+05:30
\N	f01b6f25-7dea-459b-9dbd-5b8bffcc3ec9	chandaniharendrasingh@gmail.com	Chandani	\N		User		pbkdf2_sha256$390000$aypt5TbqUVvpfJlv8O779v$Wn79DuFkyMYXYY3PxANFoGs7bXDHFMV+gC6Gb595jR0=	\N	\N	t	f	t	t	t	2023-04-11 09:30:45.19+05:30	2023-05-02 08:37:12.925+05:30
\N	f421a4f5-7063-49c4-9f9e-5c88d95b7055	chandani123@gmail.com	chandani 123	\N	\N	User		pbkdf2_sha256$390000$QFVkOicN886BWF33vGOK56$jV+8NReRlPf79GdgWO27VFuJS9EdgnqcW/83mxM2Msc=	\N	\N	t	f	f	f	t	2023-05-05 16:11:03.21+05:30	2023-05-05 16:34:38.615+05:30
\N	fc821bea-78ff-4ebd-8758-08eed026030f	sumit@gmail.com	Sumit	\N	\N	User		pbkdf2_sha256$390000$0VMx2nHY0hILCMo70Viqq1$EcFMI7J5LeRzPZwOtLBmWVMwxPLY39x3Ndp5ZFk7zmY=	\N	\N	t	f	f	f	t	2023-04-24 10:55:36.745+05:30	2023-05-05 13:55:32.072+05:30
\.


--
-- Data for Name: attendee_attendexam; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.attendee_attendexam (is_deleted, deleted_at, id, total_cheat, total_mark, percent_mark, start_time, end_time, video, submited_at, is_submited, is_qualified, is_active, is_updated, created_at, updated_at, attendee_id, exam_id, status) FROM stdin;
f	\N	0d1855c4-9327-4d7d-8228-61f0815cb21e	3	5	50	2023-04-29 11:21:15.144+05:30	2023-04-29 11:26:01.771+05:30	attendee_videos/0d1855c4-9327-4d7d-8228-61f0815cb21e.mp4	2023-04-29 11:26:01.771+05:30	t	t	f	f	2023-04-29 11:21:15.147+05:30	2023-04-29 11:26:01.777+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	Submitted
f	\N	1317b894-5928-40a0-a171-17b80007b2ac	0	5	50	2023-04-29 09:31:59.931+05:30	2023-04-29 09:36:22.027+05:30	attendee_videos/1317b894-5928-40a0-a171-17b80007b2ac.mp4	2023-04-29 09:36:22.027+05:30	t	t	f	f	2023-04-29 09:31:59.937+05:30	2023-04-29 09:36:22.032+05:30	b6f6a9a4-2daa-4124-8036-ef6ea3e5e2d2	85ded327-9dd0-420b-b32b-c953342f00f2	Time Exceeded
f	\N	180ee502-8dd7-49e2-98e5-206b2fb8ed21	0	10	100	2023-04-28 08:36:02.201+05:30	2023-04-28 08:38:43.167+05:30	attendee_videos/180ee502-8dd7-49e2-98e5-206b2fb8ed21.mp4	2023-04-28 08:38:43.168+05:30	t	t	f	f	2023-04-28 08:36:02.205+05:30	2023-04-28 08:38:43.173+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	b0be784f-b2fe-4663-a12c-aa2edb87aa57	Submitted
f	\N	1e04c6d8-8cff-448c-bafd-6c18c51a352e	0	0	0	2023-04-29 09:15:03.753+05:30	2023-04-29 09:15:06.562+05:30	attendee_videos/1e04c6d8-8cff-448c-bafd-6c18c51a352e.mp4	2023-04-29 09:15:06.562+05:30	t	f	f	f	2023-04-29 09:15:03.76+05:30	2023-04-29 09:15:06.567+05:30	e479b929-6719-4073-85ce-0209b7917680	c36d8fe0-d645-43ee-8848-545911d52052	Time Exceeded
f	\N	291bc3fa-de9e-4990-8d54-7608c48bdeb5	2	0	0	2023-05-06 17:01:57.297+05:30	2023-05-06 17:04:09.593+05:30	attendee_videos/291bc3fa-de9e-4990-8d54-7608c48bdeb5.mp4	2023-05-06 17:04:09.593+05:30	t	f	f	f	2023-05-06 17:01:57.3+05:30	2023-05-06 17:04:09.6+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	ddacff64-bdac-486f-ac18-d298fd5abda1	Submitted
f	\N	2d4f0a80-9643-4911-bc45-a519bb306fcf	0	15	100	2023-04-27 15:48:00.532+05:30	2023-04-27 15:51:56.824+05:30	attendee_videos/2d4f0a80-9643-4911-bc45-a519bb306fcf.mp4	2023-04-27 15:51:56.824+05:30	t	t	f	f	2023-04-27 15:48:00.535+05:30	2023-04-27 15:51:56.828+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	a14a3c5e-0ebb-4952-a677-272396dd0c80	Submitted
f	\N	4269ac5a-b0f6-4e9c-97ad-98f69352942a	0	5	33	2023-04-27 19:42:09.744+05:30	2023-04-27 19:49:00.325+05:30	attendee_videos/4269ac5a-b0f6-4e9c-97ad-98f69352942a.mp4	2023-04-27 19:49:00.325+05:30	t	f	f	f	2023-04-27 19:42:09.757+05:30	2023-04-27 19:49:00.468+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	Submitted
f	\N	4b483750-56c8-4627-99e6-f612bc04385b	0	5	33	2023-04-28 10:20:38.527+05:30	2023-04-28 10:22:13.902+05:30	attendee_videos/4b483750-56c8-4627-99e6-f612bc04385b.mp4	2023-04-28 10:22:13.902+05:30	t	f	f	f	2023-04-28 10:20:38.532+05:30	2023-04-28 10:22:13.907+05:30	6d2da44a-6f20-4410-9cb8-95b5ab7373fd	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	Submitted
f	\N	4b5095bf-6400-4487-987f-fee7ee927c55	0	0	0	2023-05-29 13:47:37.427+05:30	2023-05-29 13:48:02.109+05:30	attendee_videos/4b5095bf-6400-4487-987f-fee7ee927c55.mp4	2023-05-29 13:48:02.109+05:30	t	f	f	f	2023-05-29 13:47:37.431+05:30	2023-05-29 13:48:02.117+05:30	932c3c42-eeac-4238-b780-2a47483e0973	98101ac8-1087-4c32-a8cc-7ad60d7fcfa3	Submitted
f	\N	559a59c4-7a68-4e47-85d2-38eb451d48c0	2	10	66	2023-04-29 09:20:38.904+05:30	2023-04-29 09:24:05.82+05:30	attendee_videos/559a59c4-7a68-4e47-85d2-38eb451d48c0.mp4	2023-04-29 09:24:05.82+05:30	t	t	f	f	2023-04-29 09:20:38.91+05:30	2023-04-29 09:24:05.824+05:30	b6f6a9a4-2daa-4124-8036-ef6ea3e5e2d2	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	Submitted
f	\N	5fa20923-f4a5-47b7-b89d-954f87592d95	0	0	0	2023-05-06 17:08:53.754+05:30	2023-05-06 17:08:58.743+05:30	attendee_videos/5fa20923-f4a5-47b7-b89d-954f87592d95.mp4	2023-05-06 17:08:58.743+05:30	t	f	f	f	2023-05-06 17:08:53.758+05:30	2023-05-06 17:08:58.749+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	ddacff64-bdac-486f-ac18-d298fd5abda1	Submitted
f	\N	6df8625c-67c1-45ad-bd5b-d275e3633310	0	5	50	2023-05-08 15:40:36.404+05:30	2023-05-08 15:42:29.759+05:30	attendee_videos/6df8625c-67c1-45ad-bd5b-d275e3633310.mp4	2023-05-08 15:42:29.759+05:30	t	t	f	f	2023-05-08 15:40:36.408+05:30	2023-05-08 15:42:29.766+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	85ded327-9dd0-420b-b32b-c953342f00f2	Submitted
f	\N	6f2ace1e-3b3c-4e37-be35-d98d585fa0c1	0	0	0	2023-05-12 13:55:05.776+05:30	2023-05-12 13:56:06.021+05:30	attendee_videos/6f2ace1e-3b3c-4e37-be35-d98d585fa0c1.mp4	2023-05-12 13:56:06.021+05:30	t	f	f	f	2023-05-12 13:55:05.778+05:30	2023-05-12 13:56:06.026+05:30	baa1def2-f7d1-43dd-a1f2-af91e6c19b9b	85ded327-9dd0-420b-b32b-c953342f00f2	Submitted
f	\N	7f4544f1-bffd-4fc5-9d22-148ac738d797	0	0	0	2023-05-04 12:11:58.231+05:30	2023-05-04 12:12:20.809+05:30	attendee_videos/7f4544f1-bffd-4fc5-9d22-148ac738d797.mp4	2023-05-04 12:12:20.809+05:30	t	f	f	f	2023-05-04 12:11:58.233+05:30	2023-05-04 12:12:20.819+05:30	7d230545-ea91-4fc7-a876-46a7f9f3d3a5	85ded327-9dd0-420b-b32b-c953342f00f2	Submitted
f	\N	8667a532-b923-4048-9c6d-384367006feb	0	0	0	2023-05-12 13:53:17.446+05:30	2023-05-12 13:54:23.57+05:30	attendee_videos/8667a532-b923-4048-9c6d-384367006feb.mp4	2023-05-12 13:54:23.57+05:30	t	f	f	f	2023-05-12 13:53:17.45+05:30	2023-05-12 13:54:23.576+05:30	30d2a4bc-46eb-4c3f-aea5-cd38546fb890	85ded327-9dd0-420b-b32b-c953342f00f2	Submitted
f	\N	879beb00-d833-40c2-881e-17980355dc78	1	10	100	2023-04-28 10:10:45.965+05:30	2023-04-28 10:13:12.379+05:30	attendee_videos/879beb00-d833-40c2-881e-17980355dc78.mp4	2023-04-28 10:13:12.379+05:30	t	t	f	f	2023-04-28 10:10:45.97+05:30	2023-04-28 10:13:12.383+05:30	e479b929-6719-4073-85ce-0209b7917680	b0be784f-b2fe-4663-a12c-aa2edb87aa57	Submitted
f	\N	9201c935-2ff7-4971-a5ec-e57468339032	0	5	33	2023-04-28 13:02:43.543+05:30	2023-04-28 13:03:48.791+05:30	attendee_videos/9201c935-2ff7-4971-a5ec-e57468339032.mp4	2023-04-28 13:03:48.791+05:30	t	f	f	f	2023-04-28 13:02:43.547+05:30	2023-04-28 13:03:48.796+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	Submitted
f	\N	9483e52c-b07d-44aa-94c4-b35260cecf95	0	0	0	2023-05-05 16:31:57.722+05:30	\N		\N	f	f	t	f	2023-05-05 16:31:57.725+05:30	2023-05-05 16:31:57.747+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	In Progress
f	\N	98639626-54e0-4730-a4de-b193f47c2e7d	2	0	0	2023-05-12 13:56:30.692+05:30	2023-05-12 13:57:00.504+05:30	attendee_videos/98639626-54e0-4730-a4de-b193f47c2e7d.mp4	2023-05-12 13:57:00.505+05:30	t	f	f	f	2023-05-12 13:56:30.696+05:30	2023-05-12 13:57:00.51+05:30	baa1def2-f7d1-43dd-a1f2-af91e6c19b9b	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	Submitted
f	\N	9a59f3a1-43ef-4927-a0d5-b2f6d1d1500f	0	0	0	2023-05-02 10:34:32.959+05:30	2023-05-02 10:35:13.819+05:30	attendee_videos/9a59f3a1-43ef-4927-a0d5-b2f6d1d1500f.mp4	2023-05-02 10:35:13.819+05:30	t	f	f	f	2023-05-02 10:34:32.961+05:30	2023-05-02 10:35:13.827+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	b0be784f-b2fe-4663-a12c-aa2edb87aa57	Submitted
f	\N	a0e5d71b-ca48-4104-9ee3-2847ce9f39dc	0	0	0	2023-04-29 09:11:58.146+05:30	2023-04-29 09:12:00.858+05:30	attendee_videos/a0e5d71b-ca48-4104-9ee3-2847ce9f39dc.mp4	2023-04-29 09:12:00.858+05:30	t	f	f	f	2023-04-29 09:11:58.151+05:30	2023-04-29 09:12:00.862+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	c36d8fe0-d645-43ee-8848-545911d52052	Time Exceeded
f	\N	a4a75871-0c45-42f2-97d9-7b835b4c23b4	0	0	0	2023-05-05 16:45:58.473+05:30	\N		\N	f	f	t	f	2023-05-05 16:45:58.475+05:30	2023-05-05 16:45:58.493+05:30	248e3a05-457c-4058-b0a3-6232c35638f5	2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	In Progress
f	\N	a84c2305-2d9c-4245-9cec-a777b0d8e43b	0	0	0	2023-05-29 09:03:32.317+05:30	2023-05-29 09:04:09.681+05:30	attendee_videos/a84c2305-2d9c-4245-9cec-a777b0d8e43b.mp4	2023-05-29 09:04:09.681+05:30	t	f	f	f	2023-05-29 09:03:32.321+05:30	2023-05-29 09:04:09.687+05:30	3651a537-6d56-4f9f-8813-b1295e31c330	ddacff64-bdac-486f-ac18-d298fd5abda1	Submitted
f	\N	bce8690a-f881-4b63-b5a7-2f86625c399e	0	0	0	2023-05-05 16:34:39.592+05:30	\N		\N	f	f	t	f	2023-05-05 16:34:39.597+05:30	2023-05-05 16:34:39.618+05:30	f421a4f5-7063-49c4-9f9e-5c88d95b7055	2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	In Progress
f	\N	bde411ca-9e89-47bb-b273-5bea15efedaf	0	5	50	2023-04-28 08:32:06.462+05:30	2023-04-28 08:33:52.232+05:30	attendee_videos/bde411ca-9e89-47bb-b273-5bea15efedaf.mp4	2023-04-28 08:33:52.232+05:30	t	t	f	f	2023-04-28 08:32:06.465+05:30	2023-04-28 08:33:52.237+05:30	42f26e9a-b1c4-4ac3-ae94-82a503753e15	b0be784f-b2fe-4663-a12c-aa2edb87aa57	Submitted
f	\N	bf4d6097-23b5-4ca3-a5f2-98b36e1ca9b8	0	0	0	2023-05-09 09:36:42.749+05:30	2023-05-09 09:36:50.8+05:30	attendee_videos/bf4d6097-23b5-4ca3-a5f2-98b36e1ca9b8.mp4	2023-05-09 09:36:50.8+05:30	t	f	f	f	2023-05-09 09:36:42.752+05:30	2023-05-09 09:36:50.806+05:30	248e3a05-457c-4058-b0a3-6232c35638f5	ddacff64-bdac-486f-ac18-d298fd5abda1	Submitted
f	\N	d16ea218-1b8a-46a1-a68f-50df123fd19d	0	4	40	2023-04-29 09:08:57.131+05:30	2023-04-29 09:09:54.153+05:30	attendee_videos/d16ea218-1b8a-46a1-a68f-50df123fd19d.mp4	2023-04-29 09:09:54.153+05:30	t	f	f	f	2023-04-29 09:08:57.135+05:30	2023-04-29 09:09:54.157+05:30	e479b929-6719-4073-85ce-0209b7917680	85ded327-9dd0-420b-b32b-c953342f00f2	Submitted
f	\N	d338b674-c06e-4c6e-a4f1-35f5cb88d687	0	0	0	2023-04-29 09:17:06.617+05:30	2023-04-29 09:17:09.4+05:30	attendee_videos/d338b674-c06e-4c6e-a4f1-35f5cb88d687.mp4	2023-04-29 09:17:09.4+05:30	t	f	f	f	2023-04-29 09:17:06.621+05:30	2023-04-29 09:17:09.404+05:30	6d2da44a-6f20-4410-9cb8-95b5ab7373fd	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	Time Exceeded
f	\N	ef321414-225b-409f-887f-39e3994a7823	0	5	33	2023-04-27 16:56:44.14+05:30	2023-04-27 16:57:48.766+05:30	attendee_videos/ef321414-225b-409f-887f-39e3994a7823.mp4	2023-04-27 16:57:48.766+05:30	t	f	f	f	2023-04-27 16:56:44.144+05:30	2023-04-27 16:57:48.77+05:30	b21dce25-37f5-4af3-88fd-4567431ff5fa	a14a3c5e-0ebb-4952-a677-272396dd0c80	Submitted
f	\N	f638bd53-46cb-4c2f-acbd-580116014010	0	5	50	2023-05-05 16:44:56.504+05:30	2023-05-05 16:45:36.537+05:30	attendee_videos/f638bd53-46cb-4c2f-acbd-580116014010.mp4	2023-05-05 16:45:36.537+05:30	t	t	f	f	2023-05-05 16:44:56.507+05:30	2023-05-05 16:45:36.543+05:30	b21dce25-37f5-4af3-88fd-4567431ff5fa	2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	Submitted
f	\N	fdd2b0fc-c4b8-46f2-9112-efaba6967042	0	0	0	2023-04-28 16:47:59.199+05:30	2023-04-28 16:49:09.153+05:30	attendee_videos/fdd2b0fc-c4b8-46f2-9112-efaba6967042.mp4	2023-04-28 16:49:09.153+05:30	t	f	f	f	2023-04-28 16:47:59.203+05:30	2023-04-28 16:49:09.157+05:30	fc821bea-78ff-4ebd-8758-08eed026030f	b0be784f-b2fe-4663-a12c-aa2edb87aa57	Time Exceeded
\.


--
-- Data for Name: attendee_attendquestion; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.attendee_attendquestion (is_deleted, deleted_at, id, number, language, answer, answer_recorded_at, total_passed_testcase, total_mark, percent_mark, submited_at, is_submited, is_atended, is_active, is_updated, created_at, updated_at, attend_exam_id, question_id, javascript_code, python_code) FROM stdin;
f	\N	05986177-71e5-49f8-93f1-f250a13e5659	1	PYTHON3	def add(arg):\n    return arg\n\nprint(add(input()))	2023-05-29 09:04:07.032+05:30	0	0	0	2023-05-29 09:04:07.032+05:30	t	f	f	f	2023-05-29 09:03:32.332+05:30	2023-05-29 09:04:07.034+05:30	a84c2305-2d9c-4245-9cec-a777b0d8e43b	30854b3e-2544-414c-a37b-b7f76754347f	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def add(arg):\n    return arg\n\nprint(add(input()))
f	\N	05f4e017-1412-49da-8b3d-23e3ed3c2cfc	1	PYTHON3	def findMax(arg):\n  arr = str(arg).split(',')\n  arr2 = []\n  for i in arr:\n    arr2.append(int(i))\n  return max(arr2)\n\nprint(findMax(input()))	2023-04-28 10:12:30.75+05:30	5	5	100	2023-04-28 10:12:30.75+05:30	t	f	f	f	2023-04-28 10:10:45.984+05:30	2023-04-28 10:12:30.753+05:30	879beb00-d833-40c2-881e-17980355dc78	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n  arr = str(arg).split(',')\n  arr2 = []\n  for i in arr:\n    arr2.append(int(i))\n  return max(arr2)\n\nprint(findMax(input()))
f	\N	08f86d5b-941d-49fa-91c8-aa5e1aa82727	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:17:06.645+05:30	2023-04-29 09:17:06.645+05:30	d338b674-c06e-4c6e-a4f1-35f5cb88d687	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(input())
f	\N	0cdf7b6f-67d9-45de-92ce-908d791d0800	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-27 16:56:44.259+05:30	2023-04-27 16:56:44.259+05:30	ef321414-225b-409f-887f-39e3994a7823	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n    return arg\n\nprint(findMax(input()))
f	\N	120ddbb0-3e81-4919-94c8-fb1d1579bbcb	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-02 10:34:32.977+05:30	2023-05-02 10:34:32.977+05:30	9a59f3a1-43ef-4927-a0d5-b2f6d1d1500f	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg\n\nprint(rev(input()))
f	\N	171317ab-9bd3-4b96-b3d8-a9a3b8eed1dd	2	PYTHON3	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))	2023-04-28 08:36:37.534+05:30	5	5	100	2023-04-28 08:36:37.534+05:30	t	f	f	f	2023-04-28 08:36:02.224+05:30	2023-04-28 08:36:37.537+05:30	180ee502-8dd7-49e2-98e5-206b2fb8ed21	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))
f	\N	1baa0164-d853-4b69-9da5-a6ebc9ecbf9b	1	PYTHON3	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))	2023-04-28 10:21:15.592+05:30	5	5	100	2023-04-28 10:21:15.592+05:30	t	f	f	f	2023-04-28 10:20:38.549+05:30	2023-04-28 10:21:15.595+05:30	4b483750-56c8-4627-99e6-f612bc04385b	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))
f	\N	1c50257b-675e-48a5-92e6-2fef5505bad4	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-05 16:45:58.482+05:30	2023-05-05 16:45:58.482+05:30	a4a75871-0c45-42f2-97d9-7b835b4c23b4	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg\n\nprint(rev(input()))
f	\N	1e710983-78e7-4c37-b2fd-39e5298a2b4c	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-28 16:47:59.225+05:30	2023-04-28 16:47:59.225+05:30	fdd2b0fc-c4b8-46f2-9112-efaba6967042	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg\n\nprint(rev(input()))
f	\N	2437b636-17f2-472c-8ee2-cc02c876998e	3	PYTHON3	def findMin(arg):\n  print('hii')\n  return arg\n\nprint(findMin(input()))	2023-04-28 10:21:56.33+05:30	0	0	0	2023-04-28 10:21:56.33+05:30	t	f	f	f	2023-04-28 10:20:38.568+05:30	2023-04-28 10:21:56.333+05:30	4b483750-56c8-4627-99e6-f612bc04385b	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n  print('hii')\n  return arg\n\nprint(findMin(input()))
f	\N	275276ee-21c1-4242-9919-0eae088e5e3b	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-09 09:36:42.761+05:30	2023-05-09 09:36:42.761+05:30	bf4d6097-23b5-4ca3-a5f2-98b36e1ca9b8	30854b3e-2544-414c-a37b-b7f76754347f	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def add(arg):\n    return arg\n\nprint(add(input()))
f	\N	360ad725-5b12-4fb5-8aa4-2bcf1a1f4550	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-06 17:08:53.768+05:30	2023-05-06 17:08:53.768+05:30	5fa20923-f4a5-47b7-b89d-954f87592d95	30854b3e-2544-414c-a37b-b7f76754347f	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def add(arg):\n    return arg\n\nprint(add(input()))
f	\N	39f3bf7c-332d-4563-8795-ea0a60450206	1	PYTHON3	print(input())	2023-05-12 13:54:20.594+05:30	0	0	0	2023-05-12 13:54:20.594+05:30	t	f	f	f	2023-05-12 13:53:17.459+05:30	2023-05-12 13:54:20.596+05:30	8667a532-b923-4048-9c6d-384367006feb	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(input())
f	\N	3a7a2d8e-668e-4034-8b1b-72f99856896b	2	PYTHON3	def add(arg):\n  return arg[::-1]\n\nprint(add(input()))	2023-04-29 09:32:31.412+05:30	5	5	100	2023-04-29 09:32:31.412+05:30	t	f	f	f	2023-04-29 09:31:59.958+05:30	2023-04-29 09:32:31.417+05:30	1317b894-5928-40a0-a171-17b80007b2ac	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f	/ Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    const arr = input.split(' ')\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail	def add(arg):\n  return arg[::-1]\n\nprint(add(input()))
f	\N	3d1df756-2938-417d-b103-4a01f55f27f1	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-29 09:03:32.339+05:30	2023-05-29 09:03:32.34+05:30	a84c2305-2d9c-4245-9cec-a777b0d8e43b	3bd47192-a59f-4a3d-9416-962249559f4f	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def add(arg):\n  return arg\n\nprint(add(input()))
f	\N	3d8f0d3c-b619-420e-bd34-938dc6b892d0	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-12 13:53:17.467+05:30	2023-05-12 13:53:17.467+05:30	8667a532-b923-4048-9c6d-384367006feb	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f	/ Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    const arr = input.split(' ')\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail	def add(arg):\n  return arg\n\nprint(add(input()))
f	\N	414503e3-2d35-44a7-8387-39d9114de9ce	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-05 16:44:56.523+05:30	2023-05-05 16:44:56.523+05:30	f638bd53-46cb-4c2f-acbd-580116014010	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n    return arg\n\nprint(findMax(input()))
f	\N	426badca-5e13-4a86-94f2-3fabab942075	2	PYTHON3	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))	2023-04-28 10:12:58.106+05:30	5	5	100	2023-04-28 10:12:58.106+05:30	t	f	f	f	2023-04-28 10:10:45.992+05:30	2023-04-28 10:12:58.11+05:30	879beb00-d833-40c2-881e-17980355dc78	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))
f	\N	4438245a-cce7-452f-bea0-c657ea371bb4	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-06 17:01:57.317+05:30	2023-05-06 17:01:57.317+05:30	291bc3fa-de9e-4990-8d54-7608c48bdeb5	3bd47192-a59f-4a3d-9416-962249559f4f	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def add(arg):\n  return arg\n\nprint(add(input()))
f	\N	46e4f722-fb85-4e5b-9f5a-f69372659ad6	1	PYTHON3	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))	2023-05-05 16:45:31.791+05:30	5	5	100	2023-05-05 16:45:31.791+05:30	t	f	f	f	2023-05-05 16:44:56.516+05:30	2023-05-05 16:45:31.793+05:30	f638bd53-46cb-4c2f-acbd-580116014010	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))
f	\N	4af2a685-3933-4f15-bd58-55085f87cbdd	3	PYTHON3	def add(arg):\n  arr = str(arg).split(',')\n  ans = 0\n  for i in arr:\n    ans += int(i)\n  return ans\n\nprint(add(input()))	2023-04-27 16:57:45.912+05:30	5	5	100	2023-04-27 16:57:45.912+05:30	t	f	f	f	2023-04-27 16:56:44.275+05:30	2023-04-27 16:57:45.914+05:30	ef321414-225b-409f-887f-39e3994a7823	5329de0b-0b3f-4d78-a80f-4997e2d3399e	\N	def add(arg):\n  arr = str(arg).split(',')\n  ans = 0\n  for i in arr:\n    ans += int(i)\n  return ans\n\nprint(add(input()))
f	\N	4ce3c87c-1145-4891-8ddf-cb7aa97bae24	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-04 12:11:58.249+05:30	2023-05-04 12:11:58.249+05:30	7f4544f1-bffd-4fc5-9d22-148ac738d797	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f	/ Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    const arr = input.split(' ')\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail	def add(arg):\n  return arg\n\nprint(add(input()))
f	\N	50214c6f-40f9-496f-82fa-a46ea8cfcee3	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:31:59.949+05:30	2023-04-29 09:31:59.949+05:30	1317b894-5928-40a0-a171-17b80007b2ac	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(input())
f	\N	563a6706-637b-4122-aa44-a6c61ab2c595	2	PYTHON3		2023-04-28 10:22:10.684+05:30	0	0	0	\N	f	f	f	f	2023-04-28 10:20:38.559+05:30	2023-04-28 10:22:10.687+05:30	4b483750-56c8-4627-99e6-f612bc04385b	41f53fc1-a05a-473a-8c08-d8f05531825d	==> for javascript :-\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n\r\n==> for python :-\r\nprint(input())	
f	\N	5931aae5-4f77-4d22-a8e2-a63368057eea	3	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-28 13:02:43.577+05:30	2023-04-28 13:02:43.577+05:30	9201c935-2ff7-4971-a5ec-e57468339032	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	\N	5cd140ea-6c02-474e-9f10-598750225cf5	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-27 16:56:44.267+05:30	2023-04-27 16:56:44.267+05:30	ef321414-225b-409f-887f-39e3994a7823	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	\N	5d5f588d-eba1-4424-a9a4-b37fa6983ff0	1	PYTHON3	def rev(arg):\n  return arg\n\nprint(rev(input()))	2023-05-05 16:37:09.995+05:30	0	0	0	2023-05-05 16:37:09.995+05:30	t	f	f	f	2023-05-05 16:34:39.606+05:30	2023-05-05 16:37:09.998+05:30	bce8690a-f881-4b63-b5a7-2f86625c399e	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg\n\nprint(rev(input()))
f	\N	6760583d-e6a2-474c-8cde-8dbefdb8e4e8	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-05 16:34:39.613+05:30	2023-05-05 16:34:39.613+05:30	bce8690a-f881-4b63-b5a7-2f86625c399e	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n    return arg\n\nprint(findMax(input()))
f	\N	69de5f95-c763-41e1-ad45-af90c4428fa7	1	PYTHON3	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))	2023-04-27 19:44:56.135+05:30	5	5	100	2023-04-27 19:44:56.135+05:30	t	f	f	f	2023-04-27 19:42:10.015+05:30	2023-04-27 19:44:56.148+05:30	4269ac5a-b0f6-4e9c-97ad-98f69352942a	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))
f	\N	81635084-421e-4341-9437-54f9148d4da9	1	PYTHON3	def findMax(arg):\n  arr = str(arg).split(',')\n  for i in range(len(arr)):\n    arr[i] = int(arr[i])\n  return max(arr)\n\nprint(findMax(input()))	2023-04-28 08:33:37.194+05:30	5	5	100	2023-04-28 08:33:37.194+05:30	t	f	f	f	2023-04-28 08:32:06.477+05:30	2023-04-28 08:33:37.197+05:30	bde411ca-9e89-47bb-b273-5bea15efedaf	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n  arr = str(arg).split(',')\n  for i in range(len(arr)):\n    arr[i] = int(arr[i])\n  return max(arr)\n\nprint(findMax(input()))
f	\N	819734da-b2fa-4fc5-8779-375e929635c0	3	PYTHON3	def add(arg):\n  arr = str(arg).split(',')\n  ans = 0\n  for i in arr:\n    ans += int(i)\n  return ans\n  \nprint(add(input()))	2023-04-27 15:51:54.406+05:30	5	5	100	2023-04-27 15:51:54.406+05:30	t	f	f	f	2023-04-27 15:48:00.561+05:30	2023-04-27 15:51:54.408+05:30	2d4f0a80-9643-4911-bc45-a519bb306fcf	5329de0b-0b3f-4d78-a80f-4997e2d3399e	\N	def add(arg):\n  arr = str(arg).split(',')\n  ans = 0\n  for i in arr:\n    ans += int(i)\n  return ans\n  \nprint(add(input()))
f	\N	8332738e-ac0e-4d1f-ab99-c452db1b87ba	1	PYTHON3	def findMax(arg):\n  arr = str(arg).split(',')\n  for i in range(len(arr)):\n    arr[i] = int(arr[i])\n  return max(arr)\n\nprint(findMax(input()))	2023-04-27 15:49:34.77+05:30	5	5	100	2023-04-27 15:49:34.77+05:30	t	f	f	f	2023-04-27 15:48:00.545+05:30	2023-04-27 15:49:34.771+05:30	2d4f0a80-9643-4911-bc45-a519bb306fcf	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n  arr = str(arg).split(',')\n  for i in range(len(arr)):\n    arr[i] = int(arr[i])\n  return max(arr)\n\nprint(findMax(input()))
f	\N	8334c621-bc6b-4ccd-a896-595969b09ca5	1	PYTHON3	print(inputnumbers()Qualified)\n\n Qualified	2023-05-12 13:55:50.923+05:30	0	0	0	\N	f	f	f	f	2023-05-12 13:55:05.788+05:30	2023-05-12 13:55:50.928+05:30	6f2ace1e-3b3c-4e37-be35-d98d585fa0c1	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(inputnumbers()Qualified)\n\n Qualified
f	\N	84434d9f-dfd6-4242-9e18-fbca70a2a5d9	2	PYTHON3	def add(arg):\n  return arg[::-1]\n\nprint(add(input()))	2023-05-08 15:42:03.653+05:30	5	5	100	2023-05-08 15:42:03.653+05:30	t	f	f	f	2023-05-08 15:40:36.424+05:30	2023-05-08 15:42:03.654+05:30	6df8625c-67c1-45ad-bd5b-d275e3633310	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f	/ Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    const arr = input.split(' ')\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail	def add(arg):\n  return arg[::-1]\n\nprint(add(input()))
f	\N	8ff2e466-311e-44bc-a3b7-54d1869d16e4	1	PYTHON3	def findMax(arg):\n    return arg\n\nprint(findMax(input()))	2023-05-02 10:35:00.916+05:30	0	0	0	2023-05-02 10:35:00.916+05:30	t	f	f	f	2023-05-02 10:34:32.971+05:30	2023-05-02 10:35:00.919+05:30	9a59f3a1-43ef-4927-a0d5-b2f6d1d1500f	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n    return arg\n\nprint(findMax(input()))
f	\N	94aa5ee5-7b79-475b-8f2a-9d40967d2091	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-05 16:31:57.734+05:30	2023-05-05 16:31:57.734+05:30	9483e52c-b07d-44aa-94c4-b35260cecf95	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg\n\nprint(rev(input()))
f	\N	9a963c04-93bb-4f63-a334-57e528863413	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:11:58.173+05:30	2023-04-29 09:11:58.173+05:30	a0e5d71b-ca48-4104-9ee3-2847ce9f39dc	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	\N	9afc8f5c-f3ba-44dc-8d85-beb0601c0b0b	1	PYTHON3	def multiply(arg):\n  return arg\n\nprint(multiply(input()))	2023-05-29 13:47:57.729+05:30	0	0	0	2023-05-29 13:47:57.729+05:30	t	f	f	f	2023-05-29 13:47:37.44+05:30	2023-05-29 13:47:57.733+05:30	4b5095bf-6400-4487-987f-fee7ee927c55	8a1cf8ff-a494-4696-880d-bd201d1c6a95	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here	def multiply(arg):\n  return arg\n\nprint(multiply(input()))
f	\N	a241e6da-e34f-48a2-8791-0bbeaf9dcd3c	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-04 12:11:58.241+05:30	2023-05-04 12:11:58.241+05:30	7f4544f1-bffd-4fc5-9d22-148ac738d797	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(input())
f	\N	a34e2902-c0c1-4390-aa21-afc401ccb25b	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-06 17:08:53.775+05:30	2023-05-06 17:08:53.775+05:30	5fa20923-f4a5-47b7-b89d-954f87592d95	3bd47192-a59f-4a3d-9416-962249559f4f	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def add(arg):\n  return arg\n\nprint(add(input()))
f	\N	aa564824-9b54-4e67-bb7c-686ce31da42f	1	PYTHON3	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))	2023-04-29 09:21:17.28+05:30	5	5	100	2023-04-29 09:21:17.28+05:30	t	f	f	f	2023-04-29 09:20:38.923+05:30	2023-04-29 09:21:17.286+05:30	559a59c4-7a68-4e47-85d2-38eb451d48c0	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))
f	\N	acbc4778-7db3-4db8-bce7-0db7fd9f9225	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-09 09:36:42.769+05:30	2023-05-09 09:36:42.769+05:30	bf4d6097-23b5-4ca3-a5f2-98b36e1ca9b8	3bd47192-a59f-4a3d-9416-962249559f4f	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def add(arg):\n  return arg\n\nprint(add(input()))
f	\N	ace8afc2-8b48-410b-a2fd-0fba343df134	2	PYTHON3	def divide(arg):\n  arr = str(arg).split(',')\n  ans = int(int(arr[0]) / int(arr[1]))\n  return ans\nprint(divide(input()))	2023-04-29 09:24:03.464+05:30	5	5	100	2023-04-29 09:24:03.464+05:30	t	f	f	f	2023-04-29 09:20:38.93+05:30	2023-04-29 09:24:03.466+05:30	559a59c4-7a68-4e47-85d2-38eb451d48c0	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	def divide(arg):\n  arr = str(arg).split(',')\n  ans = int(int(arr[0]) / int(arr[1]))\n  return ans\nprint(divide(input()))
f	\N	ada8fb75-3187-47c8-a0b4-b5a71a6c3233	1	PYTHON3	def rev(arg):ualified ualified \n  return arg\n\nprint(rev(input()))	2023-05-12 13:56:57.773+05:30	0	0	0	2023-05-12 13:56:57.773+05:30	t	f	f	f	2023-05-12 13:56:30.709+05:30	2023-05-12 13:56:57.774+05:30	98639626-54e0-4730-a4de-b193f47c2e7d	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):ualified ualified \n  return arg\n\nprint(rev(input()))
f	\N	af4063a3-123c-4328-910c-40c329fa66af	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-12 13:55:05.796+05:30	2023-05-12 13:55:05.796+05:30	6f2ace1e-3b3c-4e37-be35-d98d585fa0c1	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f	/ Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    const arr = input.split(' ')\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail	def add(arg):\n  return arg\n\nprint(add(input()))
f	\N	b0fccb65-8101-4722-9f96-53c7a78c7b39	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-28 16:47:59.216+05:30	2023-04-28 16:47:59.216+05:30	fdd2b0fc-c4b8-46f2-9112-efaba6967042	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n    return arg\n\nprint(findMax(input()))
f	\N	b1d94bb6-8bcd-42b5-8de8-dbe16c991613	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:11:58.164+05:30	2023-04-29 09:11:58.164+05:30	a0e5d71b-ca48-4104-9ee3-2847ce9f39dc	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def multiply(arg):\n  retutn arg\n\nprint(multiply(input()))
f	\N	b8bdc35c-a277-45e9-91fe-801cf474db74	1	PYTHON3	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))	2023-04-28 13:03:43.204+05:30	5	5	100	2023-04-28 13:03:43.204+05:30	t	f	f	f	2023-04-28 13:02:43.56+05:30	2023-04-28 13:03:43.208+05:30	9201c935-2ff7-4971-a5ec-e57468339032	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))
f	\N	c9ec1220-6617-4831-b39c-a68ccce5184d	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-12 13:56:30.717+05:30	2023-05-12 13:56:30.717+05:30	98639626-54e0-4730-a4de-b193f47c2e7d	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(input())
f	\N	caa524bc-a2ae-4b0c-856f-ca9d77506511	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-28 08:32:06.487+05:30	2023-04-28 08:32:06.487+05:30	bde411ca-9e89-47bb-b273-5bea15efedaf	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg\n\nprint(rev(input()))
f	\N	cc840dfa-a09a-4e48-b8e1-b14d0caf0879	3	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-27 19:42:10.391+05:30	2023-04-27 19:42:10.391+05:30	4269ac5a-b0f6-4e9c-97ad-98f69352942a	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	\N	d0ad98e4-0ae2-4f87-8d7d-3def840c8c75	2	PYTHON3	def findMax(arg):\n    return arg\n\nprint(findMax(input()))	2023-05-05 16:46:22.753+05:30	0	0	0	2023-05-05 16:46:22.753+05:30	t	f	f	f	2023-05-05 16:45:58.488+05:30	2023-05-05 16:46:22.756+05:30	a4a75871-0c45-42f2-97d9-7b835b4c23b4	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n    return arg\n\nprint(findMax(input()))
f	\N	d23c8678-a59a-4c34-b57f-9a67f216ca12	2	PYTHON3	def add(arg):\n  return arg[::-1]\n\nprint(add(input()))	2023-04-29 09:09:43.463+05:30	4	4	80	2023-04-29 09:09:43.463+05:30	t	f	f	f	2023-04-29 09:08:57.153+05:30	2023-04-29 09:09:43.464+05:30	d16ea218-1b8a-46a1-a68f-50df123fd19d	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f	/ Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    const arr = input.split(' ')\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail	def add(arg):\n  return arg[::-1]\n\nprint(add(input()))
f	\N	d4ff2b47-7f94-4fc1-89b1-0428c8dafb36	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:15:03.773+05:30	2023-04-29 09:15:03.773+05:30	1e04c6d8-8cff-448c-bafd-6c18c51a352e	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def multiply(arg):\n  retutn arg\n\nprint(multiply(input()))
f	\N	dd6ffff5-1102-4459-82a8-662ccea9de76	3	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:17:06.654+05:30	2023-04-29 09:17:06.654+05:30	d338b674-c06e-4c6e-a4f1-35f5cb88d687	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	\N	def818bd-8674-4c9d-998d-ecc387f5fc8d	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:17:06.634+05:30	2023-04-29 09:17:06.634+05:30	d338b674-c06e-4c6e-a4f1-35f5cb88d687	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg\n\nprint(rev(input()))
f	\N	dffa0dab-fd34-4d94-a327-04c05a5a72f1	2	PYTHON3	print(input())	2023-04-27 19:48:53.711+05:30	0	0	0	2023-04-27 19:48:53.711+05:30	t	f	f	f	2023-04-27 19:42:10.187+05:30	2023-04-27 19:48:53.717+05:30	4269ac5a-b0f6-4e9c-97ad-98f69352942a	41f53fc1-a05a-473a-8c08-d8f05531825d	==> for javascript :-\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n\r\n==> for python :-\r\nprint(input())	print(input())
f	\N	e1c7bf1e-ac2e-4cf7-a05a-823016b94361	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-05 16:31:57.741+05:30	2023-05-05 16:31:57.741+05:30	9483e52c-b07d-44aa-94c4-b35260cecf95	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n    return arg\n\nprint(findMax(input()))
f	\N	e92d8ebb-4ce0-45a8-98ba-5bcd291e8f7f	1	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:08:57.145+05:30	2023-04-29 09:08:57.145+05:30	d16ea218-1b8a-46a1-a68f-50df123fd19d	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(input())
f	\N	eab2bc1a-10a2-4e4e-854a-feea8c56d051	2	PYTHON3	def findMin(arg):\n  arr = str(arg).split(',')\n  for i in range(len(arr)):\n    arr[i] = int(arr[i])\n  return min(arr)\n\nprint(findMin(input()))	2023-04-27 15:50:05.231+05:30	5	5	100	2023-04-27 15:50:05.231+05:30	t	f	f	f	2023-04-27 15:48:00.552+05:30	2023-04-27 15:50:05.235+05:30	2d4f0a80-9643-4911-bc45-a519bb306fcf	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n  arr = str(arg).split(',')\n  for i in range(len(arr)):\n    arr[i] = int(arr[i])\n  return min(arr)\n\nprint(findMin(input()))
f	\N	ec7fcfbd-de76-47ba-b870-17622e7bf76b	1	PYTHON3	def findMax(arg):\n  arr = str(arg).split(',')\n  arr2 = []\n  for i in arr:\n    arr2.append(int(i))\n  return max(arr2)\n\nprint(findMax(input()))	2023-04-28 08:38:40.229+05:30	5	5	100	2023-04-28 08:38:40.229+05:30	t	f	f	f	2023-04-28 08:36:02.216+05:30	2023-04-28 08:38:40.232+05:30	180ee502-8dd7-49e2-98e5-206b2fb8ed21	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n  arr = str(arg).split(',')\n  arr2 = []\n  for i in arr:\n    arr2.append(int(i))\n  return max(arr2)\n\nprint(findMax(input()))
f	\N	f1d80a2b-381a-47c7-bf15-490daa4acf4d	1	PYTHON3	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))	2023-04-29 11:25:32.055+05:30	5	5	100	2023-04-29 11:25:32.055+05:30	t	f	f	f	2023-04-29 11:21:15.165+05:30	2023-04-29 11:25:32.056+05:30	0d1855c4-9327-4d7d-8228-61f0815cb21e	d264aeac-938d-4e80-b049-220330cb9fac	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def rev(arg):\n  return arg[::-1]\n\nprint(rev(input()))
f	\N	f3396b97-3cd9-4547-b296-06d862c3cdcb	3	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:20:38.939+05:30	2023-04-29 09:20:38.939+05:30	559a59c4-7a68-4e47-85d2-38eb451d48c0	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	\N	f449ecb9-027d-40a3-906c-ebf39e995b88	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-29 09:15:03.782+05:30	2023-04-29 09:15:03.782+05:30	1e04c6d8-8cff-448c-bafd-6c18c51a352e	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	\N	f6c09a12-04b1-4c6d-a7c6-67dc85e79024	2	PYTHON3	def findMax(arg):\n  print('')oderbyte\n    return arg\n\nprint(findMax(input()))	2023-04-29 11:25:47.509+05:30	0	0	0	\N	f	f	f	f	2023-04-29 11:21:15.179+05:30	2023-04-29 11:25:47.513+05:30	0d1855c4-9327-4d7d-8228-61f0815cb21e	c48b113c-17c1-4140-9da3-8ff91550e2cb	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMax(arg):\n  print('')oderbyte\n    return arg\n\nprint(findMax(input()))
f	\N	fd4bdb9d-1834-413f-b061-a6d9db75e272	3	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-05-12 13:56:30.724+05:30	2023-05-12 13:56:30.724+05:30	98639626-54e0-4730-a4de-b193f47c2e7d	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	\N	ffbdb5b7-476f-476a-a5da-645e20b5f99e	2	PYTHON3	\N	\N	0	0	0	\N	f	f	f	f	2023-04-28 13:02:43.567+05:30	2023-04-28 13:02:43.567+05:30	9201c935-2ff7-4971-a5ec-e57468339032	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(input())
f	\N	ffd3b5a0-0257-4d5c-9703-64820a54022b	1	PYTHON3	print(input())	2023-05-08 15:42:19.146+05:30	0	0	0	2023-05-08 15:42:19.146+05:30	t	f	f	f	2023-05-08 15:40:36.417+05:30	2023-05-08 15:42:19.148+05:30	6df8625c-67c1-45ad-bd5b-d275e3633310	41f53fc1-a05a-473a-8c08-d8f05531825d	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	print(input())
f	\N	ffeff507-9d08-413d-ae1b-40237ac05521	1	PYTHON3	def add(arg):\n  print(arg)\n  return arg\n\nprint(add(input()))	2023-05-06 17:04:02.155+05:30	0	0	0	2023-05-06 17:04:02.155+05:30	t	f	f	f	2023-05-06 17:01:57.311+05:30	2023-05-06 17:04:02.157+05:30	291bc3fa-de9e-4990-8d54-7608c48bdeb5	30854b3e-2544-414c-a37b-b7f76754347f	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	def add(arg):\n  print(arg)\n  return arg\n\nprint(add(input()))
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add content type	4	add_contenttype
14	Can change content type	4	change_contenttype
15	Can delete content type	4	delete_contenttype
16	Can view content type	4	view_contenttype
17	Can add session	5	add_session
18	Can change session	5	change_session
19	Can delete session	5	delete_session
20	Can view session	5	view_session
21	Can add user	6	add_user
22	Can change user	6	change_user
23	Can delete user	6	delete_user
24	Can view user	6	view_user
25	Can add question	7	add_question
26	Can change question	7	change_question
27	Can delete question	7	delete_question
28	Can view question	7	view_question
29	Can add testcase	8	add_testcase
30	Can change testcase	8	change_testcase
31	Can delete testcase	8	delete_testcase
32	Can view testcase	8	view_testcase
33	Can add exam	9	add_exam
34	Can change exam	9	change_exam
35	Can delete exam	9	delete_exam
36	Can view exam	9	view_exam
37	Can add exam question	10	add_examquestion
38	Can change exam question	10	change_examquestion
39	Can delete exam question	10	delete_examquestion
40	Can view exam question	10	view_examquestion
41	Can add attend exam	11	add_attendexam
42	Can change attend exam	11	change_attendexam
43	Can delete attend exam	11	delete_attendexam
44	Can view attend exam	11	view_attendexam
45	Can add attend question	12	add_attendquestion
46	Can change attend question	12	change_attendquestion
47	Can delete attend question	12	delete_attendquestion
48	Can view attend question	12	view_attendquestion
\.


--
-- Data for Name: author_question; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.author_question (is_deleted, deleted_at, id, title, description, example, level, javascript_init_code, is_private, is_active, is_updated, created_at, updated_at, created_by_id, python_init_code) FROM stdin;
t	2023-04-28 15:52:35.819+05:30	30854b3e-2544-414c-a37b-b7f76754347f	Add 2 Numbers	add two numbers example 1+ 2 = 3	Input : 5,2\r\nOutput : 7	Easy	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	t	t	t	2023-04-04 11:21:55.04+05:30	2023-04-28 15:52:35.827+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def add(arg):\n    return arg\n\nprint(add(input()))
f	2023-04-28 15:48:49.082+05:30	3bd47192-a59f-4a3d-9416-962249559f4f	Add 3 Numbers	Add 3 numbers	input : 1,2,3\noutput : 6	Hard	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	f	t	t	2023-04-22 16:30:00.074+05:30	2023-04-28 15:48:52.15+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def add(arg):\n  return arg\n\nprint(add(input()))
f	2023-04-14 14:21:59+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d	Divide 2 Numbers	Divide 2 numbers	input : 5,2\r\noutput : 2	Easy	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	f	t	t	2023-04-14 14:18:35.929+05:30	2023-04-28 12:58:12.081+05:30	f01b6f25-7dea-459b-9dbd-5b8bffcc3ec9	print(input())
f	2023-04-28 15:43:19.441+05:30	5329de0b-0b3f-4d78-a80f-4997e2d3399e	Addition	Return Addtion of given comma-saperated Numbers	Input : 5,2\nOutput : 7	Medium	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	f	t	t	2023-04-25 12:00:38.333+05:30	2023-04-28 15:52:09.439+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def add(arg):\n    return arg\n\nprint(add(input()))
f	2023-04-29 08:57:03.9+05:30	5578a773-e817-4316-bec2-00a3a7ab0968	Find Minimum	You have given N numbers with comma separated in one String and You have to Find Minimum Number among them.	Input : 1,2,0\nOutput : 0	Medium	/*\n/ Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    const arr = input.split(' ')\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	f	t	t	2023-04-29 08:51:42.173+05:30	2023-04-29 08:57:07.086+05:30	b21dce25-37f5-4af3-88fd-4567431ff5fa	def add(arg):\n  return arg\n\nprint(add(input()))
t	2023-05-02 08:28:28.989+05:30	5ea96c09-d677-43af-9ac7-c3ee3b81cda3	Find Minimum	You have given one string that have N comma-separated numbers. And You have to return Minimum numbers out of that	Input : 2,4,3\nOutput : 2	Hard	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write( findMin(input));       // Writing output to STDOUT\n}\n\nfunction FindMin(arg){\n    return arg;\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	f	t	t	2023-04-25 13:31:01.428+05:30	2023-05-02 08:28:28.994+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def findMin(arg):\n    return arg\n\nprint(findMin(input()))
f	2023-04-22 12:50:19.303+05:30	8773cb02-2fc8-4b71-ae46-c9f4c500bb3e	Substract 2 Numbers	Here you have to write code that will take one string which have comma separated 2 numbers and you have to return Substract of that 2 numbers	input : 3,2\noutput : 1	Easy	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	t	t	t	2023-04-22 11:42:58.357+05:30	2023-04-27 12:32:27.852+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def substract(arg):\n  return arg\n\nprint(substract(input()))
f	2023-04-19 12:37:51+05:30	8a1cf8ff-a494-4696-880d-bd201d1c6a95	Multiply 3 numbers	multiply 3 numbers	input : 1,2,3\r\noutput : 6	Medium	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/\r\n\r\n// Write your code here	f	t	t	2023-04-17 10:28:09.951+05:30	2023-04-27 12:30:48.202+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def multiply(arg):\n  return arg\n\nprint(multiply(input()))
f	2023-04-28 15:46:17.548+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	Multiply 2 numbers	multiply 2 numbers	input : 5,2\r\noutput : 10	Easy	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	f	t	t	2023-04-04 10:53:45.852+05:30	2023-04-28 15:46:21.193+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def multiply(arg):\n  retutn arg\n\nprint(multiply(input()))
f	2023-05-02 08:27:56.199+05:30	b500c965-869c-4b45-aa0b-c205affa88ed	Digit Sum	You have given a digit (type string). and you have to find sum of it's all individual digits.	input : 123\noutput : 6	Medium	*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	t	t	t	2023-05-02 08:27:34.935+05:30	2023-05-06 09:20:06.93+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def add(arg):\n  return arg\n\nprint(add(input()))
f	2023-04-27 10:30:21.639+05:30	c48b113c-17c1-4140-9da3-8ff91550e2cb	Find Maximum	You have given one string that have N comma-separated numbers. And You have to return Maximum numbers out of that	Input : 2,4,3\nOutput : 4	Hard	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	t	t	t	2023-04-25 13:17:56.906+05:30	2023-04-28 15:51:50.626+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def findMax(arg):\n    return arg\n\nprint(findMax(input()))
t	2023-05-06 16:58:35.659+05:30	c5eb8d7b-996d-40e9-8951-c898bbd01114	aa	aa	aa	Easy		f	t	t	2023-05-01 10:19:47.455+05:30	2023-05-06 16:58:35.666+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	
t	2023-04-28 15:48:40.803+05:30	d264aeac-938d-4e80-b049-220330cb9fac	First Reverse	Have the function FirstReverse(str) take the str parameter being passed and return the string in reversed order. For example: if the input string is "Hello World and Coders" then your program should return the string sredoC dna dlroW olleH.	Input: "coderbyte"\nOutput: etybredoc	Easy	/*\n// Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\n*/	f	t	t	2023-04-24 08:52:38.199+05:30	2023-04-28 15:48:40.81+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def rev(arg):\n  return arg\n\nprint(rev(input()))
f	2023-04-22 14:33:44+05:30	d80314bc-994c-45b5-95c3-d6f875805c4e	Multiply 4 numbers	Here you have to write code that will take one string which have comma separated 4 numbers and you have to return a multiply of that 4 numbers.	input : 1,2,3,1\r\noutput : 6	Hard	/*\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    process.stdout.write("Hi, " + input + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n*/	f	t	t	2023-04-22 10:49:53.981+05:30	2023-04-28 12:58:46.395+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	print(input())
f	2023-04-28 15:43:07.058+05:30	e56478ac-4b74-46a1-a5c7-c3015f0e7bfe	Add 3 numbers	Add 3 numbers	input : 1,2,3\r\noutput : 6	Medium	==> for javascript :-\r\n// Sample code to perform I/O:\r\n\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding("utf-8");\r\nvar stdin_input = "";\r\n\r\nprocess.stdin.on("data", function (input) {\r\n    stdin_input += input;                               // Reading input from STDIN\r\n});\r\n\r\nprocess.stdin.on("end", function () {\r\n   main(stdin_input);\r\n});\r\n\r\nfunction main(input) {\r\n    const arr = input.split(' ')\r\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\r\n}\r\n\r\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\r\n\r\n==> for python :-\r\nprint(input())	t	t	t	2023-04-17 08:44:12.07+05:30	2023-04-28 15:43:16.149+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	def add(arg):\n  return arg\n\nprint(add(input()))
f	\N	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f	Reverse String	You have given String. And you have to reverse it	Input : Hii\nOutput : iiH	Easy	/ Sample code to perform I/O:\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding("utf-8");\nvar stdin_input = "";\n\nprocess.stdin.on("data", function (input) {\n    stdin_input += input;                               // Reading input from STDIN\n});\n\nprocess.stdin.on("end", function () {\n   main(stdin_input);\n});\n\nfunction main(input) {\n    const arr = input.split(' ')\n    process.stdout.write("Hi, " + arr + ".\\n");       // Writing output to STDOUT\n}\n\n// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail	f	t	f	2023-04-29 08:56:58.816+05:30	2023-04-29 09:28:02.849+05:30	b21dce25-37f5-4af3-88fd-4567431ff5fa	def add(arg):\n  return arg\n\nprint(add(input()))
\.


--
-- Data for Name: author_testcase; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.author_testcase (is_deleted, deleted_at, id, number, input, output, is_private, is_active, is_updated, created_at, updated_at, question_id) FROM stdin;
f	\N	0123462d-0bd6-498c-b861-6b7a6e7704c1	4	1,0,-8	-8	f	t	f	2023-04-29 08:51:42.201+05:30	2023-04-29 08:51:42.201+05:30	5578a773-e817-4316-bec2-00a3a7ab0968
f	\N	04ae5aa7-b6cd-424e-b61c-18adefea7f01	3	15,3	5	f	t	f	2023-04-14 14:18:35.953+05:30	2023-04-14 14:18:35.953+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	06a885a5-80ce-431d-957c-1c834d9d6534	3	2,3,1,4	1	f	t	f	2023-04-25 13:31:01.449+05:30	2023-04-27 12:33:52.995+05:30	5ea96c09-d677-43af-9ac7-c3ee3b81cda3
f	\N	0b99c8a8-1a47-4a5f-9d81-df917cfefb41	5	codertest	tsetredoc	f	t	f	2023-04-29 08:56:58.849+05:30	2023-04-29 09:28:03.388+05:30	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f
f	\N	147b01ff-c0ef-420a-be14-3561c82be94b	1	5,2	7	f	t	f	2023-04-04 11:21:55.048+05:30	2023-04-27 12:31:42.734+05:30	30854b3e-2544-414c-a37b-b7f76754347f
f	\N	1551c879-da83-4d81-9c6b-aa91f7fefb16	3	6,2	4	f	t	f	2023-04-22 11:42:58.382+05:30	2023-04-27 12:32:28.021+05:30	8773cb02-2fc8-4b71-ae46-c9f4c500bb3e
f	\N	1c294827-d74f-4592-b8c6-d73f9e0594f5	2	2,3,4	9	f	t	f	2023-04-17 08:44:12.083+05:30	2023-04-27 12:31:17.193+05:30	e56478ac-4b74-46a1-a5c7-c3015f0e7bfe
f	\N	21107478-6afb-4a03-962a-f661395ea661	4	2,2	1	f	t	f	2023-04-25 12:11:11.077+05:30	2023-04-25 12:11:11.077+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	2711143d-6eea-4c7d-8caa-1378467137ea	4	a	a	f	t	f	2023-05-01 10:19:47.485+05:30	2023-05-01 10:19:47.485+05:30	c5eb8d7b-996d-40e9-8951-c898bbd01114
f	\N	279a6984-20d3-4080-ba19-a3476bc17344	4	9,6,56,45	56	f	t	f	2023-04-25 13:17:56.935+05:30	2023-04-28 15:51:51.052+05:30	c48b113c-17c1-4140-9da3-8ff91550e2cb
f	\N	30c3f05e-11c2-46a3-a2e3-8cd17f8dc4df	1	1,2,3	6	f	t	f	2023-04-17 10:28:09.957+05:30	2023-04-27 12:30:48.32+05:30	8a1cf8ff-a494-4696-880d-bd201d1c6a95
f	\N	33658d06-fedd-4645-9600-8b2bb01deffa	4	2,-3	-1	f	t	f	2023-04-25 12:22:23.767+05:30	2023-04-27 12:31:42.936+05:30	30854b3e-2544-414c-a37b-b7f76754347f
f	\N	383ef07d-76c9-4b77-a76d-9cb8ebe5776a	1	5,2	7	f	t	f	2023-04-25 12:00:38.344+05:30	2023-04-28 15:52:09.466+05:30	5329de0b-0b3f-4d78-a80f-4997e2d3399e
f	\N	38bf8a87-4500-4c25-91c9-7be329c20502	1	1,2,3,1	6	f	t	f	2023-04-22 10:49:53.991+05:30	2023-04-27 12:28:12.797+05:30	d80314bc-994c-45b5-95c3-d6f875805c4e
f	\N	39917a4c-cf18-4664-9ee3-bcd908ceb1c2	5	0,-8,9,8	-8	f	t	f	2023-04-25 13:31:01.46+05:30	2023-04-27 12:33:53.219+05:30	5ea96c09-d677-43af-9ac7-c3ee3b81cda3
f	\N	3c73b5d7-6e3e-478a-a549-fd8c334f4c04	2	6,2	8	f	t	f	2023-04-04 11:21:55.053+05:30	2023-04-27 12:31:42.804+05:30	30854b3e-2544-414c-a37b-b7f76754347f
f	\N	3ecf316f-4df7-40b2-aa5a-2431a62f2d25	2	5,34,6,78,9	78	f	t	f	2023-04-25 13:17:56.922+05:30	2023-04-28 15:51:50.841+05:30	c48b113c-17c1-4140-9da3-8ff91550e2cb
f	\N	42bbcad3-2def-4ca6-87b8-c3c0ce398707	5	895	22	f	t	f	2023-05-02 08:27:34.964+05:30	2023-05-06 09:20:07.502+05:30	b500c965-869c-4b45-aa0b-c205affa88ed
f	\N	47cd9655-2a81-41a7-b58c-e009aec26311	2	hello world	dlrow olleh	f	t	f	2023-04-29 08:56:58.831+05:30	2023-04-29 09:28:03.073+05:30	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f
f	\N	48c20fb3-c05c-4017-9c1b-6a3451c8216e	3	a	a	f	t	f	2023-05-01 10:19:47.478+05:30	2023-05-01 10:19:47.478+05:30	c5eb8d7b-996d-40e9-8951-c898bbd01114
f	\N	49dcd687-250c-4c01-91c2-c0d5aea66b6d	5	-2,-2,0	-4	f	t	f	2023-04-25 12:10:13.676+05:30	2023-04-27 12:31:17.519+05:30	e56478ac-4b74-46a1-a5c7-c3015f0e7bfe
f	\N	4bb8d7d6-662d-40a8-b1b1-aa00137914da	5	23,-1,2	24	f	t	f	2023-04-25 12:00:38.394+05:30	2023-04-28 15:52:09.713+05:30	5329de0b-0b3f-4d78-a80f-4997e2d3399e
f	\N	4cf3c5b8-6e0e-46ab-8b25-e42ed0c58e50	2	10,10,10,1	1000	f	t	f	2023-04-22 10:49:54+05:30	2023-04-27 12:28:12.919+05:30	d80314bc-994c-45b5-95c3-d6f875805c4e
f	\N	4d57298b-3673-4fb0-b49a-6c4ed415d252	1	1,2,0	0	f	t	f	2023-04-29 08:51:42.182+05:30	2023-04-29 08:51:42.183+05:30	5578a773-e817-4316-bec2-00a3a7ab0968
f	\N	4e3f7ad7-8c14-44f7-8a10-9d839167b137	5	10,2,3,40	2400	f	t	f	2023-04-25 12:13:01.919+05:30	2023-04-27 12:28:13.252+05:30	d80314bc-994c-45b5-95c3-d6f875805c4e
f	\N	50b521b1-24bd-4c14-9039-040358609d1c	4	23,3,1	1	f	t	f	2023-04-25 13:31:01.455+05:30	2023-04-27 12:33:53.105+05:30	5ea96c09-d677-43af-9ac7-c3ee3b81cda3
f	\N	5111de33-a3f8-4e75-8862-7ed681763432	5	20,2,2	80	f	t	f	2023-04-25 12:12:17.108+05:30	2023-04-27 12:30:48.772+05:30	8a1cf8ff-a494-4696-880d-bd201d1c6a95
f	\N	51e5fd1a-71b6-4719-bfa5-5f810420812c	2	1,3,4	12	f	t	f	2023-04-17 10:28:09.963+05:30	2023-04-27 12:30:48.432+05:30	8a1cf8ff-a494-4696-880d-bd201d1c6a95
f	\N	54e1afcc-3d09-4b26-b920-952d811a464f	5	-32,-2	30	f	t	f	2023-04-25 12:13:40.472+05:30	2023-04-27 12:32:28.16+05:30	8773cb02-2fc8-4b71-ae46-c9f4c500bb3e
f	\N	54e4700f-69a3-46e9-ad2f-1a676e2919c3	3	-2,3,45,0	45	f	t	f	2023-04-25 13:17:56.928+05:30	2023-04-28 15:51:50.945+05:30	c48b113c-17c1-4140-9da3-8ff91550e2cb
f	\N	553399f6-7f28-4deb-880a-2b8dfd0b63c4	1	3,2	1	f	t	f	2023-04-22 11:42:58.367+05:30	2023-04-27 12:32:27.894+05:30	8773cb02-2fc8-4b71-ae46-c9f4c500bb3e
f	\N	5a8f9d23-ff9a-4b78-8f1c-7a2164408b4f	4	1,2	2	f	t	f	2023-04-25 12:10:41.656+05:30	2023-04-28 12:59:46.727+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e
f	\N	620e9d55-f47b-4b45-a16b-b2fc71f9867e	1	123	6	f	t	f	2023-05-02 08:27:34.943+05:30	2023-05-06 09:20:07.047+05:30	b500c965-869c-4b45-aa0b-c205affa88ed
f	\N	6261ec5f-17fe-4393-a9ce-74faa2d2c15b	1	5,2	10	f	t	f	2023-04-04 10:53:45.859+05:30	2023-04-28 12:59:46.391+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e
f	\N	68c0b588-d494-47d1-854a-c53d7ef10897	2	5,34,6,78,9	5	f	t	f	2023-04-25 13:31:01.443+05:30	2023-04-27 12:33:52.886+05:30	5ea96c09-d677-43af-9ac7-c3ee3b81cda3
f	\N	6c19db2b-0455-4192-b955-f2828f9bc828	5	-9,0,9	0	f	t	f	2023-04-25 12:14:09.209+05:30	2023-04-27 12:33:29.032+05:30	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	72857389-52ce-4647-9f11-6a9e16d2c5c1	2	1,2,3	6	f	t	f	2023-04-25 12:00:38.356+05:30	2023-04-28 15:52:09.524+05:30	5329de0b-0b3f-4d78-a80f-4997e2d3399e
f	\N	74ec36fe-91be-416f-b12c-f6dde9004244	1	2,4,3	2	f	t	f	2023-04-25 13:31:01.436+05:30	2023-04-27 12:33:52.772+05:30	5ea96c09-d677-43af-9ac7-c3ee3b81cda3
f	\N	76643188-bb5c-420c-b41a-1615e102395f	4	34,4,-6	32	f	t	f	2023-04-25 12:13:56.144+05:30	2023-04-27 12:33:28.974+05:30	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	7804a519-f010-4bd4-971b-d5645d3e9882	3	5,6,7	18	f	t	f	2023-04-22 16:30:00.107+05:30	2023-04-27 12:33:28.907+05:30	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	790dae4b-2664-44c2-a90c-06653b64ba24	3	2,3,4	24	f	t	f	2023-04-17 10:28:09.97+05:30	2023-04-27 12:30:48.54+05:30	8a1cf8ff-a494-4696-880d-bd201d1c6a95
f	\N	7ac2a143-d2f8-4d00-82ae-fad53c9dbc94	1	Hii	iiH	f	t	f	2023-04-29 08:56:58.823+05:30	2023-04-29 09:28:02.965+05:30	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f
f	\N	7cfa33af-7005-4886-8fec-ba0e6a77c4bc	4	1345	10	f	t	f	2023-05-02 08:27:34.96+05:30	2023-05-06 09:20:07.39+05:30	b500c965-869c-4b45-aa0b-c205affa88ed
f	\N	9107474d-4105-4db4-bf47-6ca8a3d45c43	5	-5,0,-3,-4	0	f	t	f	2023-04-25 13:17:56.941+05:30	2023-04-28 15:51:51.157+05:30	c48b113c-17c1-4140-9da3-8ff91550e2cb
f	\N	9203a4df-4e16-4393-b26d-255676760760	1	a	a	f	t	f	2023-05-01 10:19:47.463+05:30	2023-05-01 10:19:47.463+05:30	c5eb8d7b-996d-40e9-8951-c898bbd01114
f	\N	927db501-5b94-4f0f-b505-b2ced0551dac	5	-3,4	-12	f	t	f	2023-04-25 12:10:53.272+05:30	2023-04-28 12:59:46.832+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e
f	\N	972d5cb5-0898-42eb-84f1-4e7187b3abea	2	I Love Code	edoC evoL I	f	t	f	2023-04-24 08:52:38.217+05:30	2023-04-27 12:30:13.222+05:30	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	9849fcf3-e0da-4c15-b0c0-fc5685e16f0a	3	3,3,3,2	54	f	t	f	2023-04-22 10:49:54.011+05:30	2023-04-27 12:28:13.028+05:30	d80314bc-994c-45b5-95c3-d6f875805c4e
f	\N	984d228f-7506-4d0f-a3b9-109765ef1b8b	4	hii world	dlrow iih	f	t	f	2023-04-29 08:56:58.843+05:30	2023-04-29 09:28:03.29+05:30	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f
f	\N	a05febda-0d9d-4a24-b269-7d312c8df783	4	34,-2	36	f	t	f	2023-04-25 12:13:16.443+05:30	2023-04-27 12:32:28.09+05:30	8773cb02-2fc8-4b71-ae46-c9f4c500bb3e
f	\N	a30a4791-efa4-4dd4-a8fe-6bc89a9cef74	1	coderbyte	etybredoc	f	t	f	2023-04-24 08:52:38.208+05:30	2023-04-27 12:30:13.114+05:30	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	a6d6f3da-952b-4f09-ba4c-d6aee46efb82	3	7,2	9	f	t	f	2023-04-04 11:21:55.059+05:30	2023-04-27 12:31:42.869+05:30	30854b3e-2544-414c-a37b-b7f76754347f
f	\N	a96fb9e9-c170-4b16-83c9-f5b2773f5ec4	2	234	9	f	t	f	2023-05-02 08:27:34.949+05:30	2023-05-06 09:20:07.162+05:30	b500c965-869c-4b45-aa0b-c205affa88ed
f	\N	af0327da-0d65-42c8-aedb-5d8d49c863aa	2	a	a	f	t	f	2023-05-01 10:19:47.47+05:30	2023-05-01 10:19:47.47+05:30	c5eb8d7b-996d-40e9-8951-c898bbd01114
f	\N	af9da64b-179f-4972-899d-96ec996f5398	3	8,5,9	5	f	t	f	2023-04-29 08:51:42.195+05:30	2023-04-29 08:51:42.195+05:30	5578a773-e817-4316-bec2-00a3a7ab0968
f	\N	b23146b5-8cb2-4d29-9f3e-ad85c2a9674f	5	-8,0	-8	f	t	f	2023-04-25 12:22:38.714+05:30	2023-04-27 12:31:43.006+05:30	30854b3e-2544-414c-a37b-b7f76754347f
f	\N	ba9d8d63-74d6-487d-b03c-09fc69b684c4	3	7,2	14	f	t	f	2023-04-04 10:53:45.871+05:30	2023-04-28 12:59:46.62+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e
f	\N	bbacacde-5969-49f0-ac7f-f392684dcaa8	1	1,2,3	6	f	t	f	2023-04-22 16:30:00.091+05:30	2023-04-27 12:33:28.756+05:30	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	c15cc748-82b3-4115-be86-e16cfdb01c9f	4	10,2,3	60	f	t	f	2023-04-25 12:12:03.274+05:30	2023-04-27 12:30:48.66+05:30	8a1cf8ff-a494-4696-880d-bd201d1c6a95
f	\N	c5363fdf-e5b1-4e2e-b797-ae3802f04480	5	34,2	17	f	t	f	2023-04-25 12:11:21.479+05:30	2023-04-25 12:11:21.479+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	c5a47edb-82e0-4b87-9f4d-406cfe891410	3	good work	krow doog	f	t	f	2023-04-29 08:56:58.837+05:30	2023-04-29 09:28:03.178+05:30	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f
f	\N	c775b685-5c06-4abd-857c-b88124f170e6	5	namste india	aidni etsman	f	t	f	2023-04-25 12:15:08.536+05:30	2023-04-27 12:30:13.56+05:30	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	c7dd559a-c029-4068-bf66-09d489b22611	1	2,4,3	4	f	t	f	2023-04-25 13:17:56.913+05:30	2023-04-28 15:51:50.735+05:30	c48b113c-17c1-4140-9da3-8ff91550e2cb
f	\N	cc881709-6bc4-457a-a0c6-b21750c2ce81	3	Hello World	dlroW olleH	f	t	f	2023-04-24 08:52:38.224+05:30	2023-04-27 12:30:13.329+05:30	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	cdd5e5c3-84e4-4934-9f0d-9f81bcdb0f9f	5	23,-99,9	-99	f	t	f	2023-04-29 08:51:42.207+05:30	2023-04-29 08:51:42.207+05:30	5578a773-e817-4316-bec2-00a3a7ab0968
f	\N	cfc0b647-922c-4749-a430-feb0b4d84a18	3	1,3,5	9	f	t	f	2023-04-17 08:44:12.09+05:30	2023-04-27 12:31:17.302+05:30	e56478ac-4b74-46a1-a5c7-c3015f0e7bfe
f	\N	cfcb3c4c-4cf7-4eb4-887d-1803ffd7f649	1	1,2,3	6	f	t	f	2023-04-17 08:44:12.077+05:30	2023-04-27 12:31:17.083+05:30	e56478ac-4b74-46a1-a5c7-c3015f0e7bfe
f	\N	d18c4645-c560-446c-ae3c-d4bfceb9ef3b	4	4,-5,5	4	f	t	f	2023-04-25 12:09:47.201+05:30	2023-04-27 12:31:17.407+05:30	e56478ac-4b74-46a1-a5c7-c3015f0e7bfe
f	\N	d78d3d21-252e-4ab6-9091-bb370ef7b930	1	5,2	2	f	t	f	2023-04-14 14:18:35.938+05:30	2023-04-14 14:18:35.938+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	d8621206-1b5d-44a0-8b9d-bdb11873339c	2	2,3,4	9	f	t	f	2023-04-22 16:30:00.098+05:30	2023-04-27 12:33:28.833+05:30	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	da7130cd-e8a5-4757-a361-6329c1b6c1b4	3	1234567890	45	f	t	f	2023-05-02 08:27:34.954+05:30	2023-05-06 09:20:07.275+05:30	b500c965-869c-4b45-aa0b-c205affa88ed
f	\N	de2a0456-0258-45d1-8930-6e4fddc6867f	4	hii coder	redoc iih	f	t	f	2023-04-25 12:14:32.943+05:30	2023-04-27 12:30:13.442+05:30	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	e8b00e0a-42d6-4774-b9a4-0630ad37a055	5	a	a	f	t	f	2023-05-01 10:19:47.493+05:30	2023-05-01 10:19:47.494+05:30	c5eb8d7b-996d-40e9-8951-c898bbd01114
f	\N	ee49ecf7-d009-479a-8e75-ba319c8b9e4b	2	4,2	2	f	t	f	2023-04-22 11:42:58.374+05:30	2023-04-27 12:32:27.96+05:30	8773cb02-2fc8-4b71-ae46-c9f4c500bb3e
f	\N	ef4de01b-cc13-413c-9058-e312b041916e	4	2,3,4,2	48	f	t	f	2023-04-25 12:12:39.1+05:30	2023-04-27 12:28:13.144+05:30	d80314bc-994c-45b5-95c3-d6f875805c4e
f	\N	ef67a4e6-2340-4f37-ba9b-69fff2354066	4	23,3,5	31	f	t	f	2023-04-25 12:00:38.385+05:30	2023-04-28 15:52:09.654+05:30	5329de0b-0b3f-4d78-a80f-4997e2d3399e
f	\N	f0dcc8f5-dd88-453e-ad85-cf1f7092071f	2	10,2	5	f	t	f	2023-04-14 14:18:35.946+05:30	2023-04-14 14:18:35.946+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	f6a6af95-0a7f-43b5-a807-fbb4593c4c3f	2	6,2	12	f	t	f	2023-04-04 10:53:45.865+05:30	2023-04-28 12:59:46.503+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e
f	\N	f9349640-a5dd-4ed3-b8cb-bf4513002a58	3	2,3,4,5	14	f	t	f	2023-04-25 12:00:38.375+05:30	2023-04-28 15:52:09.591+05:30	5329de0b-0b3f-4d78-a80f-4997e2d3399e
f	\N	f9977ca6-39b6-4ef0-847c-d034f5bd6e26	2	2,3,0	0	f	t	f	2023-04-29 08:51:42.189+05:30	2023-04-29 08:51:42.189+05:30	5578a773-e817-4316-bec2-00a3a7ab0968
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2023-04-04 10:57:07.243+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	Multiply Two numbers2 : Medium : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 05:27:07.242670+00:00	2	[{"changed": {"fields": ["Example", "Is active"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
2	2023-04-04 11:49:43.14+05:30	62ab2d50-51af-4ae1-8f55-b137e3d19ead	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 06:17:59.493722+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
3	2023-04-04 11:49:43.145+05:30	164b2725-6206-4167-a614-5d9146d50be0	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 06:17:02.620636+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
4	2023-04-04 11:49:43.15+05:30	13b3efc0-3f39-4313-bc80-7d98f169c2e0	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 06:19:11.414343+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
5	2023-04-04 11:49:43.156+05:30	0fc0cb1a-fd83-4857-b670-d72cea528289	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 06:18:43.236847+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
6	2023-04-04 11:51:12.963+05:30	f5145eee-66ab-4a1f-89b3-bb923ef7db69	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 06:19:56.559397+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
7	2023-04-04 12:58:33.424+05:30	fd50bcda-30aa-4d84-9753-41531ed96443	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 07:27:19.685114+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
8	2023-04-04 12:58:33.429+05:30	f9495348-1981-47da-a47a-c9a07b1082d3	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 07:27:52.982578+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
9	2023-04-04 12:58:33.434+05:30	9336c84e-0955-4565-a758-3a386e93cb7e	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 07:20:08.207720+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
10	2023-04-04 12:58:33.44+05:30	6e18f1c0-1177-4b93-93f9-33d1be34993a	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 06:50:04.249119+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
11	2023-04-04 12:58:33.445+05:30	0675a5d8-a8e9-448c-abf7-a9e1467ea419	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 06:52:35.256450+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
12	2023-04-04 12:58:33.45+05:30	025cfd90-1978-4fb6-8f03-1bf07344f9ee	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 06:54:09.489559+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
13	2023-04-04 16:03:16.46+05:30	77608be9-d972-48e6-b2a3-d06d08f9ae99	Add 2 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-04 08:39:59.997604+00:00 : 1 : 100 : True	2	[{"changed": {"fields": ["Answer", "Is submited"]}}]	12	97ca9879-5893-4021-9f4e-986182506ae5
14	2023-04-05 16:07:11.78+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	singh.chandani.dcs23@vnsgu.ac.in	2	[{"changed": {"fields": ["Is author"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
15	2023-04-05 16:10:30.682+05:30	600b674c-594f-4f9e-97f5-80d505ac832a	singh.chandani.dcs23@vnsgu.ac.in.in	3		6	97ca9879-5893-4021-9f4e-986182506ae5
16	2023-04-05 16:10:39.293+05:30	b328bce0-dafd-4327-9bfd-57402e2435c9	chandani@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
17	2023-04-06 08:26:39.864+05:30	154db969-4636-47a8-8f3c-0ec9cc6a0d3b	chandani@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
18	2023-04-06 08:26:47.754+05:30	9558adbc-2331-4cd7-9c27-eb14f4928a60	sumit@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
19	2023-04-06 08:26:47.76+05:30	9f6c6fb2-0054-403f-88ad-6042e75c730a	user1@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
20	2023-04-06 13:36:00.372+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	singh.chandani.dcs23@vnsgu.ac.in	2	[{"changed": {"fields": ["Is author"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
21	2023-04-10 16:52:00.814+05:30	30854b3e-2544-414c-a37b-b7f76754347f	Add 2 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-10 11:22:00.812046+00:00	2	[{"changed": {"fields": ["Is deleted", "Example", "Init code"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
22	2023-04-10 16:53:51.615+05:30	30854b3e-2544-414c-a37b-b7f76754347f	Add 2 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-10 11:23:51.614620+00:00	2	[]	7	97ca9879-5893-4021-9f4e-986182506ae5
23	2023-04-11 10:13:59.973+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	Multiply Two numbers : Medium : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-11 04:43:59.972542+00:00	2	[{"changed": {"fields": ["Is active"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
24	2023-04-11 10:53:53.453+05:30	c13c590d-e927-45d1-a064-dd3f75fdf2db	chandanisingh@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
25	2023-04-11 10:53:53.459+05:30	87670269-3b89-4525-a053-adb3edbecec7	sumit@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
26	2023-04-11 10:53:53.464+05:30	e467081f-3b0b-4c50-89a6-8decc9bc27b8	user1@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
27	2023-04-11 10:54:02.379+05:30	a0721e4a-1003-46df-ba8d-ea978debfe20	chandani@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
28	2023-04-11 15:03:33.646+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	Multiply Two numbers : Medium : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-11 09:33:33.644303+00:00	2	[{"changed": {"fields": ["Is private", "Is active"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
29	2023-04-11 15:04:04.47+05:30	30854b3e-2544-414c-a37b-b7f76754347f	Add 2 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-11 09:34:04.468664+00:00	2	[{"changed": {"fields": ["Is deleted"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
30	2023-04-12 12:12:18.524+05:30	97ca9879-5893-4021-9f4e-986182506ae5	admin@gmail.com	2	[{"changed": {"fields": ["Image"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
31	2023-04-12 12:13:06.93+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	singh.chandani.dcs23@vnsgu.ac.in	2	[{"changed": {"fields": ["Image"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
32	2023-04-12 13:00:19.738+05:30	371913b9-980b-4118-9867-b6ce0ad594b3	singh.chandani.dcs23@vnsgu.ac.in	2	[{"changed": {"fields": ["Image"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
33	2023-04-12 13:03:38.439+05:30	97ca9879-5893-4021-9f4e-986182506ae5	admin@gmail.com	2	[{"changed": {"fields": ["Is examiner"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
34	2023-04-12 16:55:05.764+05:30	92640d9b-8a6d-40c5-9c06-c6b819ae8479	chandani@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
35	2023-04-12 16:55:05.769+05:30	b6159a6a-440d-476a-9ff9-e56e60f8bbf6	sumit@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
36	2023-04-14 13:28:34.385+05:30	ca8951ec-c540-4f1c-a959-51889fe678c2	qq : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 07:46:17.051064+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
37	2023-04-14 13:28:34.392+05:30	be5a8407-5d62-4dd2-92f9-2ddaed800de8	qq : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 07:52:04.259957+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
38	2023-04-14 13:28:34.397+05:30	aa7ed377-1c9f-4c7d-af2a-7b43f068a67f	qq : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 07:48:28.930622+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
39	2023-04-14 13:28:34.402+05:30	73df7be1-828e-4236-9367-4ea06e82bb9a	qq : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 07:54:17.318028+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
40	2023-04-14 13:28:34.408+05:30	66443505-ba53-495e-8a18-aa93148da99c	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 07:58:06.583970+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
41	2023-04-14 13:28:34.413+05:30	5934c545-9c01-4f64-9bf8-7d5a1b6dfc3f	qq : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 07:55:47.771425+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
42	2023-04-14 13:28:34.418+05:30	3a084fd3-fc40-4122-a996-df2408624750	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 07:57:03.328250+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
153	2023-04-24 10:32:39.39+05:30	649b170b-babc-4419-88d5-07bfa48ee470	sumit@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
43	2023-04-14 13:32:12.533+05:30	c267658c-931b-4c82-af81-a4ce1b1a66cf	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:01:16.843119+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
44	2023-04-14 13:56:34.251+05:30	ff2e9aeb-72b4-4104-9fc4-6a107c1aacc0	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:05:52.664242+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
45	2023-04-14 13:56:34.257+05:30	a7ef964c-7432-4fd2-a3c2-51c614ca42dd	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:13:05.585373+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
46	2023-04-14 13:56:34.262+05:30	9b239772-a973-455d-9cc0-b33b4f1a42fd	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:11:27.779819+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
47	2023-04-14 13:56:34.268+05:30	990aca51-01a9-4b3c-8459-8b66ff67ed77	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:05:24.682955+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
48	2023-04-14 13:56:34.273+05:30	8569ce2e-7c4b-46f9-8883-8853639251b9	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:04:22.360991+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
49	2023-04-14 13:56:34.279+05:30	75e00492-a0f2-4f9f-913e-268e350d458f	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:24:43.990646+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
50	2023-04-14 13:56:34.284+05:30	6d4e58fa-7806-4728-aaa5-6c409d4175b1	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:09:50.468897+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
51	2023-04-14 13:56:34.289+05:30	64d1ebd0-81de-4784-baf3-51810d099562	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:24:10.140003+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
52	2023-04-14 13:56:34.293+05:30	490669f7-c3cf-45be-a5ea-c1df2ae08816	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:04:51.636424+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
53	2023-04-14 13:56:34.298+05:30	38cbd837-4ed9-4ff7-b070-a0731a087788	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:03:09.631807+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
54	2023-04-14 13:56:34.302+05:30	337106df-83fa-4651-98bb-34dd310b56a2	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:02:18.264646+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
55	2023-04-14 13:56:34.307+05:30	2c15b985-33ec-4319-ad39-065bf5b8121c	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:25:44.810481+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
56	2023-04-14 13:56:34.313+05:30	2867f684-88c5-467c-a87f-915920b9fb1e	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:24:58.894590+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
57	2023-04-14 13:56:34.318+05:30	1814334f-11aa-4d51-9f77-bcbd18165fae	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:21:51.945157+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
58	2023-04-14 13:56:34.323+05:30	0115ea67-3f81-4c65-a618-11399d0d15c8	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:21:19.144236+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
59	2023-04-14 14:01:40.465+05:30	f1c8d7a7-817a-47e5-b492-2ae330084e7a	Add 3 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:30:20.905267+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
60	2023-04-14 14:01:40.471+05:30	da6ff6fc-4c56-48b1-9235-3742636deaeb	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:27:42.913046+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
61	2023-04-14 14:01:40.476+05:30	71a6be18-50d0-4435-b845-35e2707b481d	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:27:26.878480+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
62	2023-04-14 14:01:40.481+05:30	4c764655-d710-479a-b5b4-9d373d9db034	Add 3 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:31:07.218386+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
63	2023-04-14 14:08:12.685+05:30	add4d498-02a9-4dc9-92c5-12118ec0fd0a	qq : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:33:46.445989+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
64	2023-04-14 14:08:20.908+05:30	bdabcfb3-661f-4369-b091-67f52253491e	Add 4 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:32:16.012307+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
65	2023-04-14 14:08:20.915+05:30	36676946-d8d0-42e8-89d2-ffa38698938f	Add 3 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-14 08:31:45.258973+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
66	2023-04-14 14:09:18.082+05:30	2ae6f526-e39a-4341-92ee-492b02419ed6	chandani@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
67	2023-04-14 14:09:18.087+05:30	709e636f-5553-480d-8960-ffe9ebe93621	chandanisingh@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
68	2023-04-14 15:37:58.232+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d	Divide 2 Numbers : Easy : chandaniharendrasingh@gmail.com : False : True : 2023-04-14 10:07:58.230887+00:00	2	[{"changed": {"fields": ["Example", "Is private"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
69	2023-04-17 08:48:35.685+05:30	e56478ac-4b74-46a1-a5c7-c3015f0e7bfe	add 3 numbers : Medium : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-17 03:18:35.683536+00:00	2	[{"changed": {"fields": ["Example", "Is private"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
70	2023-04-17 08:52:28.47+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d	Divide 2 Numbers : Easy : chandaniharendrasingh@gmail.com : False : True : 2023-04-17 03:22:28.469815+00:00	2	[{"changed": {"fields": ["Is private"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
71	2023-04-17 10:11:51.822+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d	Divide 2 Numbers : Easy : admin@gmail.com : False : True : 2023-04-17 04:41:51.820942+00:00	2	[{"changed": {"fields": ["Created by"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
72	2023-04-17 10:12:26.748+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d	Divide 2 Numbers : Easy : chandaniharendrasingh@gmail.com : False : True : 2023-04-17 04:42:26.747350+00:00	2	[{"changed": {"fields": ["Created by"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
73	2023-04-17 11:12:48.14+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 05:42:48.139334+00:00	2	[{"changed": {"fields": ["Is active"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
74	2023-04-17 14:14:16.798+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:44:16.796687+00:00	2	[{"changed": {"fields": ["Time limit"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
75	2023-04-17 14:15:50.748+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:45:50.746561+00:00	2	[{"changed": {"fields": ["Is active"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
76	2023-04-17 14:22:59.14+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:52:59.139353+00:00	2	[{"changed": {"fields": ["Time limit"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
77	2023-04-17 14:24:21.258+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:54:21.257489+00:00	2	[{"changed": {"fields": ["Time limit"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
78	2023-04-17 14:26:39.109+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:56:39.107745+00:00	2	[{"changed": {"fields": ["Time limit hour", "Time limit minute"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
115	2023-04-21 14:05:15.731+05:30	8c5a8b1c-242c-4f5e-b9d3-5aaa03a738ff	ll : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-19 07:26:32.189353+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
79	2023-04-17 14:29:57.83+05:30	96e59d5a-1706-4954-8244-bff64fe6afa7	singh.chandani.dcs23@vnsgu.ac.in : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:56:39.107745+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
80	2023-04-17 14:29:57.836+05:30	5fe10b47-0c9b-4c7b-96a9-145605dc88d7	singh.chandani.dcs23@vnsgu.ac.in : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:56:39.107745+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
81	2023-04-17 14:29:57.841+05:30	522bf8e3-cfb6-4040-beae-cb0128728baa	singh.chandani.dcs23@vnsgu.ac.in : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:56:39.107745+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
82	2023-04-17 14:29:57.846+05:30	24ebb057-6fde-4f38-840c-41e00a6c7c2f	singh.chandani.dcs23@vnsgu.ac.in : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:56:39.107745+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
83	2023-04-18 09:51:27.893+05:30	f05a8afc-4e19-488a-bb71-a5ebf5757c0e	aa : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:19:52.218102+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
84	2023-04-18 09:51:27.899+05:30	b5d9bad4-573e-47d7-9fcb-b1c190a99a72	t1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-17 10:10:39.033828+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
85	2023-04-18 09:51:27.905+05:30	4e8be7e9-d7ad-4ea9-a4a6-727ea64fa794	aa : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:20:42.008781+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
86	2023-04-18 09:51:27.911+05:30	252c137c-211c-4894-ab6f-f336b1e745da	title1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-17 10:03:24.233320+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
87	2023-04-18 09:55:29.741+05:30	715e7a36-7cac-4cd0-a409-f4181af1686b	Exam1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:22:16.114329+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
88	2023-04-18 10:14:43.867+05:30	0ca80f84-82d9-4f6e-8b21-024fd19a5a74	qqq : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:43:42.503402+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
89	2023-04-18 11:26:38.245+05:30	621d9e72-bcf2-47a4-9d6a-75206ca2bafc	Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:38:37.238554+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
90	2023-04-18 11:26:38.252+05:30	5291a508-2baf-473c-8b36-f39388e885e9	dddd : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:51:40.504358+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
91	2023-04-18 11:26:38.257+05:30	16c50508-dd15-4d1b-ba68-0b3a0c119f41	qqq : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:45:06.350953+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
92	2023-04-18 11:26:38.262+05:30	163954d8-7b8f-4fd8-8417-4801610e6a47	Exam1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:25:54.162896+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
93	2023-04-18 11:26:38.266+05:30	12fe7933-9617-4432-b7f1-8c55538b6bcd	aaa : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:47:49.614964+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
94	2023-04-18 11:26:38.271+05:30	0fa42f2e-2e2e-44c4-ad3b-e329611b1589	Exam2 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 04:22:59.498219+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
95	2023-04-18 11:41:35.197+05:30	bedaf96d-5cb5-4916-a64c-6259129dfc66	singh.chandani.dcs23@vnsgu.ac.in : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-17 08:56:39.107745+00:00 : False: 100	2	[{"changed": {"fields": ["Is qualified"]}}]	11	97ca9879-5893-4021-9f4e-986182506ae5
96	2023-04-18 12:52:21.514+05:30	ff46b4c6-d7db-4399-8064-da07b34054d9	Exam1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 05:57:11.128464+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
97	2023-04-18 12:52:21.521+05:30	e65983c7-ebf3-4245-972e-aabed4d05251	jghkgh : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 06:42:13.148367+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
98	2023-04-18 12:52:21.527+05:30	bcec08cf-11d5-4431-bc52-0404e0618d9c	dfhd : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-18 06:48:09.294910+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
99	2023-04-19 09:26:55.75+05:30	eb31d84e-e998-4dbb-874d-4bd46eeef830	gre : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-19 03:49:34.494576+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
100	2023-04-19 09:26:55.755+05:30	6616608f-95d7-4117-b1d1-aa2017f99472	fjy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-19 03:50:40.405584+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
101	2023-04-19 09:26:55.76+05:30	23f95c28-a835-46ab-95c7-36b8e3326355	thrht : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-19 03:07:08.549610+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
102	2023-04-19 13:02:20.22+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-19 07:32:20.219490+00:00	2	[{"changed": {"fields": ["Is deleted"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
103	2023-04-20 15:26:24.059+05:30	87b6271f-a56c-4967-8234-51035550b515	Exam1 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-20 09:56:24.057183+00:00	2	[{"changed": {"fields": ["Start time", "End time"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
104	2023-04-20 16:27:07.599+05:30	e8fc2c25-ebcc-4f63-8cfc-faf5bc46cf8f	Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-20 10:57:07.598362+00:00	2	[{"changed": {"fields": ["Exam link"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
105	2023-04-20 16:56:46.847+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-20 11:26:46.844761+00:00	2	[{"changed": {"fields": ["Exam link"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
106	2023-04-20 16:56:56.215+05:30	87b6271f-a56c-4967-8234-51035550b515	Exam1 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-20 11:26:56.214053+00:00	2	[{"changed": {"fields": ["Exam link"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
107	2023-04-21 11:34:52.671+05:30	79517ce2-df21-48dc-add4-0ae6bf5315a6	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-20 11:26:46.844761+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
108	2023-04-21 11:50:53.263+05:30	fe2b5775-8fc9-4948-b757-5afc951f58a0	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 06:06:48.655842+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
109	2023-04-21 11:50:53.27+05:30	4304b3cc-d1c2-4118-8b72-83877ddce05b	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 06:06:48.655842+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
110	2023-04-21 11:50:53.275+05:30	3600fe92-6718-4f8d-bebb-e28888e77f89	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 06:06:48.655842+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
111	2023-04-21 11:50:53.28+05:30	307e1a0c-482a-4acc-9882-397c4dc5d39a	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 06:06:48.655842+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
112	2023-04-21 14:05:15.658+05:30	e8fc2c25-ebcc-4f63-8cfc-faf5bc46cf8f	Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-21 03:53:39.155407+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
113	2023-04-21 14:05:15.721+05:30	d6ed8a9e-4858-436c-8b2c-eb4d7adfd6d1	Exam2 : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-20 10:54:58.022960+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
114	2023-04-21 14:05:15.726+05:30	d600148f-2ca8-4891-a650-d02b5299111c	fhth : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-21 04:00:36.451141+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
152	2023-04-24 10:32:39.385+05:30	da864270-e51a-4271-9f34-629bc4d4e8d0	chandani@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
116	2023-04-21 14:05:15.736+05:30	7214065c-01d9-4662-97bc-619655eaf473	etr : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-21 07:17:40.229352+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
117	2023-04-21 14:05:15.74+05:30	205f7f9b-9031-4bc0-96a6-b40f9d7401f4	frg : chandaniharendrasingh@gmail.com : False : True : 2023-04-19 06:31:47.763022+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
118	2023-04-21 14:05:32.272+05:30	cd89100c-17fa-49a1-8174-5ef5823c6374	Random Question : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 08:35:32.270773+00:00	2	[{"changed": {"fields": ["Is deleted"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
119	2023-04-21 14:06:45.963+05:30	cd89100c-17fa-49a1-8174-5ef5823c6374	Random Question : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 08:36:45.962090+00:00	2	[{"changed": {"fields": ["Exam link"]}}]	9	97ca9879-5893-4021-9f4e-986182506ae5
120	2023-04-22 08:33:42.631+05:30	fc34e0fe-e0db-47a2-9eab-915bcbb00654	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
121	2023-04-22 08:33:42.638+05:30	ebcda933-3378-4636-b14e-d37c0da7be1e	chandani@gmail.com : Random Question : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 08:36:45.962090+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
122	2023-04-22 08:33:42.643+05:30	e8b525b6-30cd-4904-9c08-fd94e64efb70	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
123	2023-04-22 08:33:42.649+05:30	e4aaba4d-e685-4eb6-9cfd-23d23a366e29	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
124	2023-04-22 08:33:42.653+05:30	d7c52309-6347-4904-b300-3cb29a52141a	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
125	2023-04-22 08:33:42.658+05:30	cdb397ea-0621-40b3-b32d-4f9af28e5a1e	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
126	2023-04-22 08:33:42.662+05:30	a48d0fec-b5eb-419f-b951-142ce82996bc	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
127	2023-04-22 08:33:42.667+05:30	89edbed6-1703-4d49-ab0f-200d024c2ce1	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
128	2023-04-22 08:33:42.673+05:30	7b8ee009-ab52-4697-8592-46e27147dbe0	sumit@gmail.com : Random Question : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 08:36:45.962090+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
129	2023-04-22 08:33:42.678+05:30	4df2c062-647c-4fd1-a00e-56e6083bd95e	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
130	2023-04-22 08:33:42.685+05:30	328cdeb8-e23a-4548-8bb1-3adf5447ea60	sumit@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
131	2023-04-22 08:33:42.69+05:30	2313276f-803d-473c-993b-0238edc9d7bc	sumit@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
132	2023-04-22 08:33:42.695+05:30	20fa1bf7-602d-4ec7-9df6-d0e43059c807	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
133	2023-04-22 08:33:42.7+05:30	20536e08-e8d1-4cd5-be42-179de1ed7a63	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
134	2023-04-22 08:33:42.704+05:30	0ce2a018-3d0e-49fc-9b46-b88598819b74	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
135	2023-04-22 08:33:42.709+05:30	0ca0e5f0-8ab2-42cf-9552-448d654fa31b	chandani@gmail.com : title222222222 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-21 07:16:06.104493+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
136	2023-04-22 10:13:05.997+05:30	c7e3f107-8c45-45c7-915e-5c26fbaef8c4	aman@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
137	2023-04-22 10:13:06.003+05:30	dc8886b5-dcd7-4626-9c44-7acf00609a59	sumit@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
138	2023-04-22 10:13:06.009+05:30	162ddd34-9142-424b-9476-1950c0a2fb93	sumitz@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
139	2023-04-22 10:59:32.507+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	Multiply Two numbers : Medium : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-22 05:29:32.505301+00:00	2	[{"changed": {"fields": ["Is private"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
140	2023-04-22 11:00:27.897+05:30	dd7dc01a-2d57-444c-936a-c36bae5d9c2d	Subtract 3 number : Easy : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-17 04:58:36.966698+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
141	2023-04-22 11:00:43.601+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	Multiply Two numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-22 05:30:43.599382+00:00	2	[{"changed": {"fields": ["Level"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
142	2023-04-22 11:00:54.489+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	Multiply 2 numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-22 05:30:54.487776+00:00	2	[{"changed": {"fields": ["Title", "Description"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
143	2023-04-22 11:02:52.189+05:30	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e	Multiply 2 numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-22 05:32:52.188230+00:00	2	[{"changed": {"fields": ["Is deleted"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
144	2023-04-22 15:50:55.936+05:30	3b370593-d08b-4a31-8afa-e36acdee4296	sumit@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
145	2023-04-24 09:54:08.015+05:30	f6bcfb93-0f1b-475d-ba0e-ad3be19d66ed	chandani@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 03:45:07.286363+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
146	2023-04-24 09:54:08.023+05:30	6ff9e5cc-18d4-449f-8d74-0e8dfc965b0b	chandani@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 03:45:07.286363+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
147	2023-04-24 09:54:48.164+05:30	60c0d7e6-bc38-4166-8a5d-621528e5a578	sumit@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 03:45:07.286363+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
148	2023-04-24 09:54:48.171+05:30	37922aea-c57e-44db-a456-3ee8a1cc3dbe	chandani@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 03:45:07.286363+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
149	2023-04-24 10:30:49.367+05:30	da957227-8270-496a-b805-c52d6389f3a6	sumit@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 03:45:07.286363+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
150	2023-04-24 10:30:49.374+05:30	bc98a4e7-6bc1-49e7-9ae9-b360cfb26f93	chandani@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 03:45:07.286363+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
151	2023-04-24 10:30:49.38+05:30	2a40d62a-d917-42fc-8ac2-f799f64d83b1	sumit@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 03:45:07.286363+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
154	2023-04-24 11:30:30.212+05:30	30854b3e-2544-414c-a37b-b7f76754347f	Add 2 Numbers : Easy : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-24 06:00:30.210987+00:00	2	[{"changed": {"fields": ["Example"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
155	2023-04-24 12:48:09.277+05:30	b42c7d51-c025-43dc-b688-492dd973a9ba	chandani@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 07:15:50.880232+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
156	2023-04-24 12:48:09.283+05:30	900a40dc-039f-4519-84b9-798f3bfcd3a4	chandani@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 07:15:50.880232+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
157	2023-04-24 12:48:09.288+05:30	8818ad88-bf8b-41b0-83b2-5f00f061e551	chanda@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
158	2023-04-24 13:03:58.66+05:30	cd89e81a-9de5-4880-8eba-cff738819835	nikita@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 07:28:58.358802+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
159	2023-04-24 13:03:58.667+05:30	76c504f9-53da-4fff-baac-cc03eb91fcc1	ajay@gmail.com : hgjh : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 07:28:58.358802+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
160	2023-04-24 13:06:52.093+05:30	4d18e9ad-33ec-42cb-bfdb-b3d190541c2d	nikita@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 07:34:25.791864+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
161	2023-04-24 13:51:09.49+05:30	bf2660a7-7a93-463a-ba69-326accc75bc6	niki@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
162	2023-04-24 13:51:21.272+05:30	8f1be180-7baf-467c-9f10-fbc2a1056fbc	niki@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
163	2023-04-24 13:51:21.277+05:30	8aecbcbd-0070-47ce-be99-5870b48bb214	ajay@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
164	2023-04-24 15:27:18.974+05:30	fc0bcf98-403b-4f50-8cb4-b33816f9f992	ok@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
165	2023-04-24 15:27:18.981+05:30	52f76b6a-fedb-45a8-9c01-607c4aa9605a	ojj@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
166	2023-04-24 15:27:18.988+05:30	1b64859c-fd8a-4b6b-b69a-0a8ae1687d0f	ok@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
167	2023-04-24 15:27:37.38+05:30	30186e2f-2d0f-4c5c-aacd-b1610d421e10	ajay@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
168	2023-04-24 15:27:37.384+05:30	af67c8a0-24f7-44f0-8483-8f3f7932539e	niki@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
169	2023-04-24 15:27:37.389+05:30	6ad9a5ad-3751-45ac-acdf-5822da96978e	ojj@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
170	2023-04-24 15:27:37.393+05:30	d00a72e1-3efd-4d98-9629-d269f86a7e4a	ok@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
171	2023-04-24 15:27:43.113+05:30	95b0e57f-c810-4737-8beb-3c00b1b9d4df	chanda@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
172	2023-04-24 15:27:48.973+05:30	da96e9f6-8a76-4303-9961-d9a3e5dd273d	chandan@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
173	2023-04-24 15:56:48.103+05:30	4e3a8cbf-9574-4523-beba-a21edbc70487	aa@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
174	2023-04-25 10:06:36.362+05:30	f9c713fd-d209-4a39-9207-59b34cefbb9d	add@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
175	2023-04-25 10:06:36.368+05:30	d583ade8-5c8e-40b8-8bcb-d980da38287f	aa@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
176	2023-04-25 10:06:36.373+05:30	b30020ab-b095-49bd-a327-5dc44f9937a7	add@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
177	2023-04-25 10:06:36.377+05:30	0f29715e-4f38-45b6-8c6a-dcddc3b83269	add@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
178	2023-04-25 10:06:36.381+05:30	0e580782-16e7-495a-b6a9-696461cccea6	add@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
179	2023-04-25 10:15:13.76+05:30	5e93e36f-e823-41de-8c7b-04bae57a9561	ajay@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
180	2023-04-25 11:01:14.143+05:30	e56478ac-4b74-46a1-a5c7-c3015f0e7bfe	Add 3 numbers : Medium : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-25 05:31:14.141961+00:00	2	[{"changed": {"fields": ["Init code"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
181	2023-04-25 11:01:58.418+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d	Divide 2 Numbers : Easy : chandaniharendrasingh@gmail.com : False : True : 2023-04-25 05:31:58.417060+00:00	2	[{"changed": {"fields": ["Init code"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
182	2023-04-25 11:32:25.107+05:30	8a1cf8ff-a494-4696-880d-bd201d1c6a95	Multiply 3 numbers : Medium : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-25 06:02:25.106524+00:00	2	[{"changed": {"fields": ["Example", "Init code"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
183	2023-04-25 12:09:47.202+05:30	d18c4645-c560-446c-ae3c-d4bfceb9ef3b	Add 3 numbers : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
184	2023-04-25 12:10:13.677+05:30	49dcd687-250c-4c01-91c2-c0d5aea66b6d	Add 3 numbers : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
185	2023-04-25 12:10:41.657+05:30	5a8f9d23-ff9a-4b78-8f1c-7a2164408b4f	Multiply 2 numbers : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
186	2023-04-25 12:10:53.273+05:30	927db501-5b94-4f0f-b505-b2ced0551dac	Multiply 2 numbers : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
187	2023-04-25 12:11:11.078+05:30	21107478-6afb-4a03-962a-f661395ea661	Divide 2 Numbers : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
188	2023-04-25 12:11:21.48+05:30	c5363fdf-e5b1-4e2e-b797-ae3802f04480	Divide 2 Numbers : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
189	2023-04-25 12:12:03.275+05:30	c15cc748-82b3-4115-be86-e16cfdb01c9f	Multiply 3 numbers : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
190	2023-04-25 12:12:17.109+05:30	5111de33-a3f8-4e75-8862-7ed681763432	Multiply 3 numbers : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
191	2023-04-25 12:12:39.101+05:30	ef4de01b-cc13-413c-9058-e312b041916e	Multiply 4 numbers : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
192	2023-04-25 12:13:01.92+05:30	4e3f7ad7-8c14-44f7-8a10-9d839167b137	Multiply 4 numbers : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
193	2023-04-25 12:13:16.444+05:30	a05febda-0d9d-4a24-b269-7d312c8df783	Substract 2 Numbers : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
194	2023-04-25 12:13:40.473+05:30	54e1afcc-3d09-4b26-b920-952d811a464f	Substract 2 Numbers : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
195	2023-04-25 12:13:56.145+05:30	76643188-bb5c-420c-b41a-1615e102395f	Add 3 Numbers : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
196	2023-04-25 12:14:09.21+05:30	6c19db2b-0455-4192-b955-f2828f9bc828	Add 3 Numbers : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
197	2023-04-25 12:14:32.944+05:30	de2a0456-0258-45d1-8930-6e4fddc6867f	First Reverse : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
198	2023-04-25 12:15:08.537+05:30	c775b685-5c06-4abd-857c-b88124f170e6	First Reverse : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
199	2023-04-25 12:22:23.768+05:30	33658d06-fedd-4645-9600-8b2bb01deffa	Add 2 Numbers : 4 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
200	2023-04-25 12:22:38.715+05:30	b23146b5-8cb2-4d29-9f3e-ad85c2a9674f	Add 2 Numbers : 5 : True	1	[{"added": {}}]	8	97ca9879-5893-4021-9f4e-986182506ae5
201	2023-04-25 16:02:03.165+05:30	fa369c43-b76a-4f3b-ae12-0d902dbc9ba4	Find Minimum : Hard : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-25 08:01:01.465272+00:00 : 1 : 0 : False	2	[{"changed": {"fields": ["Answer", "Python code", "Javascript code", "Answer recorded at"]}}]	12	97ca9879-5893-4021-9f4e-986182506ae5
202	2023-04-25 16:03:35.452+05:30	fa369c43-b76a-4f3b-ae12-0d902dbc9ba4	Find Minimum : Hard : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-25 08:01:01.465272+00:00 : 1 : 0 : False	2	[{"changed": {"fields": ["Answer", "Python code"]}}]	12	97ca9879-5893-4021-9f4e-986182506ae5
203	2023-04-25 16:04:25.459+05:30	fa369c43-b76a-4f3b-ae12-0d902dbc9ba4	Find Minimum : Hard : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-25 08:01:01.465272+00:00 : 1 : 0 : False	2	[{"changed": {"fields": ["Python code"]}}]	12	97ca9879-5893-4021-9f4e-986182506ae5
204	2023-04-25 16:11:03.894+05:30	fa369c43-b76a-4f3b-ae12-0d902dbc9ba4	Find Minimum : Hard : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-25 08:01:01.465272+00:00 : 1 : 0 : False	2	[{"changed": {"fields": ["Python code"]}}]	12	97ca9879-5893-4021-9f4e-986182506ae5
205	2023-04-26 10:03:08.115+05:30	eeb29e77-be30-445b-abd0-744d95be9902	addd@gamil.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
206	2023-04-26 10:03:21.458+05:30	a077e790-7582-431e-a4f9-2e7b863434e3	chandani@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 03:17:52.988588+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
207	2023-04-26 10:03:38.577+05:30	2946fa41-bbdc-4b5e-bf83-094792e4e560	addd@gamil.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
208	2023-04-26 10:03:45.183+05:30	2aae556a-3f64-44c9-90ad-39b571e95ce8	niki@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
209	2023-04-26 10:03:49.607+05:30	53bdd770-0b9a-4e5d-9923-797d97c7309e	niki@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
210	2023-04-26 10:04:02.34+05:30	36feab70-1354-48b2-9775-e83ad50309a6	niki@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
211	2023-04-26 10:04:06.535+05:30	32c8826a-e1ef-4647-b2ad-49cf68bfc5f9	ajay@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 07:15:39.385328+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
212	2023-04-26 10:53:19.717+05:30	f0824787-fa69-4b9c-b0ca-061ffea3d622	First Reverse : Easy : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-24 03:22:38.230814+00:00 : 2 : 0 : False	2	[{"changed": {"fields": ["Answer", "Python code", "Javascript code"]}}]	12	97ca9879-5893-4021-9f4e-986182506ae5
213	2023-04-26 10:53:50.747+05:30	7a582f2c-95e8-4624-a463-a2a4d68d079b	ajay@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 03:17:52.988588+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
214	2023-04-26 10:54:11.588+05:30	8e5047b2-1293-474d-8268-777a074cc484	ajay@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 03:17:52.988588+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
215	2023-04-26 10:54:32.022+05:30	87a92a87-0b49-4edb-b251-56cfe5832ddb	chandani@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 03:17:52.988588+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
216	2023-04-26 10:59:59.055+05:30	bd6e4f56-01e8-48a3-9148-b0f055a429af	chandani@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 05:25:07.163545+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
217	2023-04-26 11:15:10.164+05:30	b5a60d63-33fd-4c71-a909-ac8555625d60	chandani@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 05:25:07.163545+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
218	2023-04-26 12:16:32.898+05:30	f48f3593-cbab-4a2f-96a7-6b2e08081359	test@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 06:45:33.340593+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
219	2023-04-26 12:16:32.906+05:30	ee03428b-e9fa-42cf-863c-13676b492db0	raj@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 06:45:33.340593+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
220	2023-04-26 12:16:32.913+05:30	8b8d1405-4c4a-4329-bb9e-9587e4c02cf1	niki@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 06:45:33.340593+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
221	2023-04-26 12:16:32.919+05:30	70389cca-e99d-42a3-8dd9-823f1d7cb591	ajay@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 06:45:33.340593+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
222	2023-04-26 12:16:32.926+05:30	495a047e-35a7-4327-8e68-6a79eed354c7	chandani@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 06:45:33.340593+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
223	2023-04-26 12:16:32.934+05:30	3aeb8ce9-3f13-427c-b8f0-0fc8f077040f	raj@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 06:45:33.340593+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
224	2023-04-26 12:16:32.942+05:30	2d4daa37-5f0b-42ee-924d-e4b524a8046c	chandani@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 06:45:33.340593+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
225	2023-04-26 12:16:32.949+05:30	1df3379c-cdaf-4552-88db-ee672863a39e	chandani@gmail.com : Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 06:45:33.340593+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
226	2023-04-27 12:25:50.436+05:30	b71115f7-f002-4c0e-818d-60df2935bd6e	Test Exam for Init_code : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-26 10:54:06.868094+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
227	2023-04-27 12:25:50.442+05:30	86b4ce45-5119-487d-ad33-54093d31af2c	vdsdbv : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-27 05:39:12.060756+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
228	2023-04-27 12:25:50.447+05:30	81d5e443-09ec-4336-a28f-bd7540e535c3	hfgj : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-27 05:39:16.944868+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
229	2023-04-27 12:25:50.451+05:30	223e9cc3-697d-421f-bf05-4651c40d72a8	fd : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 06:13:42.977497+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
230	2023-04-27 12:25:50.456+05:30	0d550420-47f9-49f3-b8f9-43c4766ddcfb	gfg : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-24 07:16:12.227483+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
231	2023-04-27 15:37:08.645+05:30	a2a82e70-ab06-4177-8893-042c06ca4a9d	raj@gmail.com : Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 08:40:40.043931+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
232	2023-04-27 15:44:48.057+05:30	cd89100c-17fa-49a1-8174-5ef5823c6374	Random Question : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-22 03:10:02.595623+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
233	2023-04-27 15:45:51.021+05:30	e859a42f-ced5-43c2-bb98-bc8c20864745	niki@gmail.com : Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 10:09:07.902259+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
234	2023-04-27 15:45:51.028+05:30	e83123d4-290f-4552-ab12-f03e11fa4bb9	ajay@gmail.com : Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 10:09:07.902259+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
235	2023-04-27 15:45:51.032+05:30	d69a88d6-bd00-4723-976c-14641752fa8a	raj@gmail.com : Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 10:09:07.902259+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
236	2023-04-27 15:45:51.037+05:30	60a3986b-c8b4-4ef2-9f75-121c09d073d2	nani@gmail.com : Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 10:09:07.902259+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
237	2023-04-27 15:45:51.041+05:30	558843de-9306-44e8-8f6f-01493c6a9144	raj2@gmail.com : Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 10:09:07.902259+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
238	2023-04-27 15:46:05.147+05:30	c6befeca-9c62-4c46-b867-edc2269a5720	chandani@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 07:06:35.565716+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
239	2023-04-27 15:46:05.152+05:30	bedaf96d-5cb5-4916-a64c-6259129dfc66	singh.chandani.dcs23@vnsgu.ac.in : Title 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 07:40:57.564215+00:00 : False: 100	3		11	97ca9879-5893-4021-9f4e-986182506ae5
240	2023-04-27 15:46:05.157+05:30	bda9aba9-dc0e-4635-bd5c-a9ef8d20e01f	nikita@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
241	2023-04-27 15:46:05.162+05:30	a8895ec5-c600-494d-a157-c881d70705ad	chandanisingh@gmail.com : Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 10:09:07.902259+00:00 : False: 100	3		11	97ca9879-5893-4021-9f4e-986182506ae5
242	2023-04-27 15:46:05.167+05:30	63598a58-6749-465b-afd1-069a9ed818c0	addd@gamil.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 07:06:35.565716+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
243	2023-04-27 15:46:05.173+05:30	54220247-0847-4f03-85d4-fee06f148797	sumit@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
244	2023-04-27 15:46:05.177+05:30	41c41df2-7d6f-4a0f-8338-52cbdff0ab79	chandani@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 07:06:35.565716+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
245	2023-04-27 15:46:05.183+05:30	090e80b5-a9d2-4e6e-850b-7ff002f26598	add@gmail.com : Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 07:06:35.565716+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
246	2023-04-27 15:46:19.983+05:30	f8581114-67f7-450f-82b1-452a7d3efbb8	Exam3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 07:06:35.565716+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
247	2023-04-27 15:46:19.988+05:30	91f28ca7-363c-4c9c-af75-d58f39ec77c4	Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-24 08:20:53.969532+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
248	2023-04-27 15:46:19.993+05:30	87b6271f-a56c-4967-8234-51035550b515	Exam1 : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-24 05:38:34.769229+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
249	2023-04-27 15:46:19.998+05:30	6fdfef0e-e5e7-4a0a-84bc-a4fb394538aa	Title 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 07:40:57.564215+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
250	2023-04-27 15:46:20.003+05:30	48e54ca5-090a-4079-98a6-2a14007a14f0	Exam123 : chandaniharendrasingh@gmail.com : False : True : 2023-04-19 06:32:45.625563+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
251	2023-04-27 15:46:20.009+05:30	3f91844c-a655-46e9-9ede-b56612ea1d3c	Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 10:09:07.902259+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
252	2023-04-27 20:22:15.667+05:30	e1abb492-373c-408f-9c34-7dfafa9d5c90	aa@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
253	2023-04-27 20:22:16.055+05:30	5ec0c49e-af08-4df2-bbda-aa213f1ff08e	add@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
254	2023-04-27 20:22:16.367+05:30	d9fe2636-1580-4525-b0ad-338df586eb76	addd@gamil.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
255	2023-04-27 20:22:16.671+05:30	b6467f9f-5828-4edb-87a7-7f7cf27bd588	aman@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
256	2023-04-27 20:22:16.968+05:30	dd030d0f-3003-4855-a3e1-bc5e863a71bc	nani@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
257	2023-04-27 20:22:17.211+05:30	56c50bf2-d9a3-4dfc-8bea-4d0837cd21df	niki@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
258	2023-04-27 20:22:17.623+05:30	5a9ebeb6-0bef-4eaf-a243-5f7f0590df1b	ok@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
259	2023-04-27 20:22:17.834+05:30	769fae8a-8ec8-45b4-a411-e0ea36262cb6	raj2@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
260	2023-04-27 20:22:18.072+05:30	1eab50e5-13ee-4c79-bfe7-adf7187b37b8	rinki@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
261	2023-04-28 08:59:13.847+05:30	e9c1056f-c93e-4799-93d0-b1705c0c077e	chandani@gmail.com : Exam 3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-28 03:01:24.118682+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
262	2023-04-28 08:59:13.855+05:30	29df942f-458f-499d-b72f-f5e6faa5222c	chandani@gmail.com : Exam 3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-28 03:01:24.118682+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
263	2023-04-28 09:11:03.951+05:30	c1b76a79-8c5f-4688-bb00-9c84ead31b23	ajay@gmail.com : Exam 3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-28 03:01:24.118682+00:00 : False: 100	3		11	97ca9879-5893-4021-9f4e-986182506ae5
264	2023-04-28 09:14:48.979+05:30	641172c0-672a-4743-a610-55aca00582ec	raj@gmail.com : Exam 1 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-27 14:54:43.553351+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
265	2023-04-28 10:10:28.317+05:30	55e84183-4a3e-4ec2-9526-cffb60567f7c	ajay@gmail.com : Exam 2 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-27 14:54:26.951966+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
266	2023-04-28 10:17:18.826+05:30	17e149a0-b5ec-479a-99bf-b21e7c61ef0a	ajay@gmail.com : Exam 3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-28 04:38:55.367767+00:00 : False: 100	3		11	97ca9879-5893-4021-9f4e-986182506ae5
267	2023-04-28 11:41:43.622+05:30	82f1e871-2efa-4eee-85d3-fb12bbae08f4	nikita@gmail.com : Exam 3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-28 04:38:55.367767+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
268	2023-04-28 11:41:43.628+05:30	06289ef2-b514-4581-96e7-7016670dba35	chandani@gmail.com : Exam 3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-28 04:38:55.367767+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
269	2023-04-28 11:42:00.239+05:30	319a002f-9820-4242-bb01-02667ff76062	nikita@gmail.com : Exam 3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-28 04:38:55.367767+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
270	2023-04-28 12:57:15.624+05:30	e65986d4-85c0-49d8-ad91-a430f9796382	Test 1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-28 07:07:58.330246+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
271	2023-04-28 12:57:31.299+05:30	d38b2459-7b95-4089-ac6f-e2aca9b91350	aa : Medium : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-28 03:51:55.011827+00:00	3		7	97ca9879-5893-4021-9f4e-986182506ae5
272	2023-04-28 12:58:12.082+05:30	41f53fc1-a05a-473a-8c08-d8f05531825d	Divide 2 Numbers : Easy : chandaniharendrasingh@gmail.com : False : True : 2023-04-28 07:28:12.081020+00:00	2	[{"changed": {"fields": ["Python init code", "Javascript init code"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
273	2023-04-28 12:58:46.399+05:30	d80314bc-994c-45b5-95c3-d6f875805c4e	Multiply 4 numbers : Hard : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-28 07:28:46.395542+00:00	2	[{"changed": {"fields": ["Example", "Python init code", "Javascript init code"]}}]	7	97ca9879-5893-4021-9f4e-986182506ae5
274	2023-04-28 13:04:58.818+05:30	22730eb5-9883-452a-a6bb-5b28538b0659	nancysolanki85001@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
275	2023-04-28 13:04:58.824+05:30	605028de-2d51-4915-a74d-1b044f0c1e1e	test@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
276	2023-04-28 13:06:56.779+05:30	97ca9879-5893-4021-9f4e-986182506ae5	admin@gmail.com	2	[{"changed": {"fields": ["Is author"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
277	2023-04-28 16:47:45.387+05:30	f8c6158f-669e-4e95-a406-a43670434f6e	sumit@gmail.com : Exam 3 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-28 11:17:26.098318+00:00 : False: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
278	2023-04-29 08:48:07.664+05:30	f01b6f25-7dea-459b-9dbd-5b8bffcc3ec9	chandaniharendrasingh@gmail.com	2	[{"changed": {"fields": ["Name"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
279	2023-04-29 08:48:27.384+05:30	024501ff-7e8d-4b60-bb50-fa3e605f6a54	chandanisingh@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
280	2023-04-29 08:48:27.392+05:30	e671c2ee-648c-4500-bb75-ff24f6920ae1	niki@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
281	2023-04-29 08:48:27.397+05:30	05bec046-6b79-4d82-8976-4d4d61f23588	praful@gmail.com	3		6	97ca9879-5893-4021-9f4e-986182506ae5
282	2023-04-29 08:48:46.759+05:30	b21dce25-37f5-4af3-88fd-4567431ff5fa	nikita@gmail.com	2	[{"changed": {"fields": ["Is author", "Is examiner"]}}]	6	97ca9879-5893-4021-9f4e-986182506ae5
283	2023-04-29 09:30:10.97+05:30	c7a9122e-f8ff-4c74-9d6e-51b2799ef7ce	ruchika@gmail.com : Exam 5 for Limited Time : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-29 03:37:06.410517+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
284	2023-04-29 10:11:24.249+05:30	fcd95034-a9c6-4682-bfb8-ef36a623fc7b	Test 1 : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-28 11:16:24.667962+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
285	2023-04-29 10:11:24.255+05:30	4ca59626-e067-4015-a623-a13f5c546466	Test 2 with Random : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-29 04:20:25.670707+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
286	2023-04-29 10:11:40.381+05:30	7a93aaa2-bb62-413d-bdfc-721d40697a19	Test 1 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-29 04:22:22.237976+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
287	2023-05-02 09:02:19.839+05:30	9ccc26a4-e866-4e08-a2fe-f2bbc8a43384	chandaniharendrasingh@gmail.com : Test 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-29 06:55:20.798103+00:00 : True: 0	2	[]	11	97ca9879-5893-4021-9f4e-986182506ae5
288	2023-05-02 09:02:25.501+05:30	9ccc26a4-e866-4e08-a2fe-f2bbc8a43384	chandaniharendrasingh@gmail.com : Test 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-29 06:55:20.798103+00:00 : True: 0	3		11	97ca9879-5893-4021-9f4e-986182506ae5
289	2023-05-05 09:52:27.57+05:30	f594e003-9d38-4541-b03b-82111618ee84	Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:15:48.245065+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
290	2023-05-05 09:52:27.577+05:30	ee18fa98-28e3-4f68-8b46-ca5f8abd1908	Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:15:25.553004+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
291	2023-05-05 09:52:27.583+05:30	8d8f0191-3a91-4229-9571-32cc5a300b3e	Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:14:09.288141+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
292	2023-05-05 09:52:27.588+05:30	45fdb76b-b603-4ecc-8608-22f7b15086e3	Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:19:57.034108+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
293	2023-05-05 09:56:05.839+05:30	eee402a3-86f7-48c8-ba76-9479842c4134	Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:17:01.782572+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
294	2023-05-05 09:59:49.657+05:30	b7e3cf55-4c32-4a0c-b314-4fecf6f8e95b	Teste Exam S : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:28:45.753121+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
295	2023-05-05 09:59:49.662+05:30	75622861-698d-426b-9f69-e7d4713a8212	Test Exam : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:27:37.271430+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
296	2023-05-05 10:56:25.49+05:30	db890353-988c-4324-abb3-89f0332b789c	Teste Exam S : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:31:30.020172+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
297	2023-05-05 10:56:25.496+05:30	c3b595fc-53b9-41a0-a148-2461167a15cf	Teste Exam S : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:31:43.607135+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
298	2023-05-05 10:56:25.501+05:30	b4143aff-02b1-4383-89fc-2ec55191695a	Teste Exam S : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:29:52.094284+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
299	2023-05-05 10:56:25.506+05:30	b01a75a7-0ce3-4e34-a7ed-4a7dbadbb8f3	Teste Exam S : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:31:11.238018+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
300	2023-05-05 10:56:25.511+05:30	5fd1f67a-a0bb-4419-9cf8-cc14ed853538	Teste Exam S : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:33:48.940528+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
301	2023-05-05 10:56:25.517+05:30	4b82d838-a126-43d0-9849-cec3dfa1a258	Teste Exam S : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:32:14.302195+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
302	2023-05-05 10:56:25.523+05:30	30c9aa01-db1b-4a34-b650-a4a773858c2f	Teste Exam S : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 04:33:06.814229+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
303	2023-05-05 11:14:43.134+05:30	e6fe8ead-d0ff-4852-9b31-891ffa9b5ad3	ghfgj : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 05:39:27.490410+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
304	2023-05-05 11:14:43.14+05:30	c5dd15b9-72eb-4678-95b7-35a3430fca51	ttt : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 05:34:44.835347+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
305	2023-05-05 11:14:43.145+05:30	bb43acef-5cef-4965-abc5-f4aa8e3707c4	gdfhd : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 05:26:50.768603+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
306	2023-05-05 11:14:43.15+05:30	62bd459b-afe7-44c3-b5e4-c7e8354bfcf3	kkk : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 05:31:19.860851+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
307	2023-05-05 11:14:43.154+05:30	1bf2cc40-c36b-4f48-a7e8-9c85efe413cf	www : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 05:36:49.784761+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
308	2023-05-05 11:14:43.16+05:30	0506ec78-201e-4707-a6bf-800d81de8fe9	aa : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-04-28 04:23:36.595022+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
309	2023-05-05 11:14:43.165+05:30	03e1cd3e-5c4b-443a-ad47-64d465ab0cab	hhh : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-05-05 05:41:13.391278+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
310	2023-05-05 14:22:06.225+05:30	fd3fb8c5-910f-455f-9acb-c233430e5718	kkk : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-05-05 08:24:53.850917+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
311	2023-05-05 14:22:06.231+05:30	f9de61b6-bb6a-4935-89e3-2c915e6fd596	yyy : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-05-05 08:24:52.014837+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
312	2023-05-05 14:22:06.238+05:30	f2c46726-a44b-455e-9442-e398fdda099f	Test Selected : singh.chandani.dcs23@vnsgu.ac.in : True : True : 2023-05-05 08:24:58.874459+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
313	2023-05-05 14:22:06.242+05:30	bdeafd48-940e-4879-b572-c108f77e7497	Test 2 : singh.chandani.dcs23@vnsgu.ac.in : False : True : 2023-04-29 06:55:20.798103+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
314	2023-05-05 16:26:55.895+05:30	623dcb13-d3e7-4f76-a69f-652284b1a08e	Test3 : singh.chandani.dcs23@vnsgu.ac.in : False : False : 2023-04-29 06:56:01.635558+00:00	3		9	97ca9879-5893-4021-9f4e-986182506ae5
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	contenttypes	contenttype
5	sessions	session
6	account	user
7	author	question
8	author	testcase
9	examiner	exam
10	examiner	examquestion
11	attendee	attendexam
12	attendee	attendquestion
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	account	0001_initial	2023-05-31 11:18:04.611123+05:30
2	account	0002_alter_user_image	2023-05-31 11:18:04.617898+05:30
3	contenttypes	0001_initial	2023-05-31 11:18:04.631133+05:30
4	admin	0001_initial	2023-05-31 11:18:04.658707+05:30
5	admin	0002_logentry_remove_auto_add	2023-05-31 11:18:04.664636+05:30
6	admin	0003_logentry_add_action_flag_choices	2023-05-31 11:18:04.673813+05:30
7	author	0001_initial	2023-05-31 11:18:04.716391+05:30
8	examiner	0001_initial	2023-05-31 11:18:04.765046+05:30
9	attendee	0001_initial	2023-05-31 11:18:04.81825+05:30
10	attendee	0002_alter_attendexam_video	2023-05-31 11:18:04.82814+05:30
11	attendee	0003_alter_attendquestion_number	2023-05-31 11:18:04.84099+05:30
12	attendee	0004_attendquestion_javascript_code_and_more	2023-05-31 11:18:04.883094+05:30
13	attendee	0005_attendexam_status	2023-05-31 11:18:04.897224+05:30
14	contenttypes	0002_remove_content_type_name	2023-05-31 11:18:04.918318+05:30
15	auth	0001_initial	2023-05-31 11:18:05.003497+05:30
16	auth	0002_alter_permission_name_max_length	2023-05-31 11:18:05.021128+05:30
17	auth	0003_alter_user_email_max_length	2023-05-31 11:18:05.029882+05:30
18	auth	0004_alter_user_username_opts	2023-05-31 11:18:05.038016+05:30
19	auth	0005_alter_user_last_login_null	2023-05-31 11:18:05.051701+05:30
20	auth	0006_require_contenttypes_0002	2023-05-31 11:18:05.055505+05:30
21	auth	0007_alter_validators_add_error_messages	2023-05-31 11:18:05.064151+05:30
22	auth	0008_alter_user_username_max_length	2023-05-31 11:18:05.071616+05:30
23	auth	0009_alter_user_last_name_max_length	2023-05-31 11:18:05.079094+05:30
24	auth	0010_alter_group_name_max_length	2023-05-31 11:18:05.099849+05:30
25	auth	0011_update_proxy_permissions	2023-05-31 11:18:05.11633+05:30
26	auth	0012_alter_user_first_name_max_length	2023-05-31 11:18:05.126238+05:30
27	author	0002_alter_testcase_number	2023-05-31 11:18:05.135935+05:30
28	author	0003_rename_init_code_question_javascript_init_code_and_more	2023-05-31 11:18:05.159798+05:30
29	sessions	0001_initial	2023-05-31 11:18:05.180331+05:30
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
268gjd2kfkld99490cz03wiaej1jxlmq	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1prAPY:xMs9717_O8WWYHYab-bjuYYGoWl600vkd6EKkMTsHEg	2023-05-09 10:06:16.247+05:30
6d58i1i6wsl18mu9neu2ighmaoi4b50x	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1ps23k:4VoWuT0rpnvs10lJJ99dofdWyJ5LHBmX3RldDylMmys	2023-05-11 19:23:20.815+05:30
aju2z43sv7i9k5ys9y65lcnffgd6ufw5	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1pqnbb:HXNWR_buXP_nfv9t3bRUOfu0MLnXmjvWYvnZMYuKixU	2023-05-08 09:45:11.75+05:30
buqp3zgbmipt8naqfs8q9gd99wayvu1d	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1ptOBn:6KdCcuWJit7Oq7BjAAj-oEznipeFvZwLEb4ill_1CLc	2023-05-15 13:13:15.105+05:30
db9h2x0vu03feb1rdxam3g128t344ln3	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1pupNM:e96-GQ9WYoZrcXiDHgfxzl2dPcueJhGLMfBMD-KLh-g	2023-05-19 12:27:08.523+05:30
fhivd04vpz0r18aipf1jc4hrstfcqc8h	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1prBCj:ppmUZlSn5mqW8FN2eQvkyeyAKm1rMBX6ytP_HFFXmqM	2023-05-09 10:57:05.774+05:30
gkluw5zswp2kyp9a1vcc9mdc1k4w6kd2	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1prs1p:zO3nQkGfAIbeVBu5ue4V327c3cOEdTSpemWH8CPvy34	2023-05-11 08:40:41.212+05:30
jsn3pw4xtd57fdmxwgreuivjw9xp3o75	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1pruBf:SODzaFuB48dA8-X1TJTL5uMpZiC-y_I--DZUj5GUkAM	2023-05-11 10:58:59.546+05:30
mjmef4pg16pkd9t1xl4xcdvtb04mpylj	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1pl6mr:EXvlDzs1W0qCCWGwctCAgfSQJh_RZpHQmdt6HQIRfts	2023-04-22 17:01:17.119+05:30
tt6qzr9pwbojkklpatebs5cjwb1o2rjd	.eJxVjEsOwjAMBe-SNY2atHFiluw5Q2XHDi2gVupnhbg7VOoCdk-amfcyHW1r322Lzt0g5mwwZsIUsQoJm6qtvauwtFphApd8qIE0mNNvxpQfOu6t3Gm8TTZP4zoPbHfFHnSx10n0eTncv4Oeln6vxUEUVobioEnJhQLeB5TsgTmHErFEL46TirQcCZRJnAh8R5Bs3h9rsEGm:1pkFnV:M_vTz3aQ79AWL98V003fAWHfNcT_OFNUJcIqWFUvhAQ	2023-04-20 08:26:25.04+05:30
\.


--
-- Data for Name: examiner_exam; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.examiner_exam (is_deleted, deleted_at, id, title, description, passing_percent_mark, start_time, end_time, exam_link, is_time_limit, time_limit_hour, time_limit_minute, total_question, is_active, is_updated, created_at, updated_at, created_by_id) FROM stdin;
f	\N	09fd9f37-6711-476e-9ff0-52d2410c57aa	Exam 2	Exam 2	50	\N	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/09fd9f37-6711-476e-9ff0-52d2410c57aa	t	1	0	2	t	f	2023-04-28 09:42:25.118+05:30	2023-04-28 09:42:29.269+05:30	f01b6f25-7dea-459b-9dbd-5b8bffcc3ec9
f	\N	2712444c-7e31-41bd-bcb5-18c854db65e6	Test Exam	Test Exam	50	\N	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/2712444c-7e31-41bd-bcb5-18c854db65e6	f	0	0	2	t	f	2023-05-29 09:07:32.642+05:30	2023-05-29 09:07:32.666+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
f	\N	2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	Test 1	Test 1 at VNSGU	50	2023-04-29 11:15:00+05:30	2023-05-11 11:16:00+05:30	http://127.0.0.1:3002/attend_exam/check_start_exam/2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	t	0	30	2	t	f	2023-04-29 11:18:01.241+05:30	2023-05-05 16:31:40.061+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
t	2023-05-05 13:55:03.778+05:30	388aca11-8e04-48a0-b95f-418de87c816a	Test	Test	50	\N	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/388aca11-8e04-48a0-b95f-418de87c816a	t	1	0	1	t	t	2023-05-05 11:16:11.798+05:30	2023-05-05 13:55:03.786+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
t	2023-05-29 09:01:29.571+05:30	3f7cbd32-8b06-43ff-9d2c-d9f6afbe3eee	fhjg	ghkg	40	2023-05-20 13:58:00+05:30	2023-05-21 13:58:00+05:30	http://127.0.0.1:3002/attend_exam/check_start_exam/3f7cbd32-8b06-43ff-9d2c-d9f6afbe3eee	f	0	0	2	f	t	2023-05-12 13:58:53.956+05:30	2023-05-29 09:01:29.577+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
t	2023-05-05 13:55:01.81+05:30	53bc7e0b-1361-40a9-91c5-400fe99819d5	Test	Test	50	\N	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/53bc7e0b-1361-40a9-91c5-400fe99819d5	t	1	0	1	t	t	2023-05-05 11:16:45.129+05:30	2023-05-05 13:55:01.816+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
f	\N	85ded327-9dd0-420b-b32b-c953342f00f2	Exam 5 for Limited Time	Exam 5 for Limited Time	50	\N	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/85ded327-9dd0-420b-b32b-c953342f00f2	t	0	2	2	t	f	2023-04-29 09:05:37.941+05:30	2023-04-29 09:37:19.766+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
f	\N	8b19e4f7-4286-48ec-9843-17251642e8c3	Exam 4 30-04	Test 1 with random Questions	50	2023-04-30 09:02:00+05:30	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/8b19e4f7-4286-48ec-9843-17251642e8c3	t	0	30	1	t	f	2023-04-29 09:03:07.029+05:30	2023-04-29 09:16:06.594+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
f	\N	98101ac8-1087-4c32-a8cc-7ad60d7fcfa3	Test e2	Test e2	50	\N	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/98101ac8-1087-4c32-a8cc-7ad60d7fcfa3	f	0	0	1	t	f	2023-05-29 13:46:39.309+05:30	2023-05-29 13:46:39.333+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
f	\N	a14a3c5e-0ebb-4952-a677-272396dd0c80	Exam 1 27-04	Exam 1 for placement at VNSGU	50	2023-04-27 15:47:00+05:30	2023-04-28 15:47:00+05:30	http://127.0.0.1:3002/attend_exam/check_start_exam/a14a3c5e-0ebb-4952-a677-272396dd0c80	t	1	0	3	t	t	2023-04-27 15:47:33.787+05:30	2023-04-29 09:07:41.865+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
f	\N	b0be784f-b2fe-4663-a12c-aa2edb87aa57	Exam 3	Exam 3 for Testing Purpose	50	2023-04-28 08:30:00+05:30	2023-05-05 08:30:00+05:30	http://127.0.0.1:3002/attend_exam/check_start_exam/b0be784f-b2fe-4663-a12c-aa2edb87aa57	t	0	30	2	t	t	2023-04-28 08:31:17.684+05:30	2023-05-02 10:34:02.971+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
f	\N	c36d8fe0-d645-43ee-8848-545911d52052	Exam 1	Exam 1 for placement in MBIT	50	\N	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/c36d8fe0-d645-43ee-8848-545911d52052	f	0	0	2	t	f	2023-04-29 08:52:29.095+05:30	2023-04-29 08:52:33.6+05:30	b21dce25-37f5-4af3-88fd-4567431ff5fa
f	\N	ddacff64-bdac-486f-ac18-d298fd5abda1	test1	teste1	50	2023-05-29 09:03:00+05:30	2023-06-02 09:03:00+05:30	http://127.0.0.1:3002/attend_exam/check_start_exam/ddacff64-bdac-486f-ac18-d298fd5abda1	t	0	30	2	t	t	2023-05-06 16:59:45.671+05:30	2023-05-29 09:03:09.799+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
f	\N	e959cb27-a5b1-4d78-a243-c2e34c819326	Exam 1	Exam 1 with Random Question	50	2023-04-13 10:02:00+05:30	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/e959cb27-a5b1-4d78-a243-c2e34c819326	t	1	0	2	f	t	2023-04-28 09:57:58.335+05:30	2023-04-28 10:08:11.149+05:30	f01b6f25-7dea-459b-9dbd-5b8bffcc3ec9
f	\N	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	Exam 2	Exam 2	50	\N	\N	http://127.0.0.1:3002/attend_exam/check_start_exam/f2aa9ff7-d173-4681-adf3-102ff1aeacc6	t	0	30	3	t	t	2023-04-27 19:30:54.125+05:30	2023-04-29 09:24:51.67+05:30	371913b9-980b-4118-9867-b6ce0ad594b3
\.


--
-- Data for Name: examiner_examquestion; Type: TABLE DATA; Schema: public; Owner: linuxhint
--

COPY public.examiner_examquestion (is_deleted, deleted_at, id, number, is_active, created_at, updated_at, exam_id, question_id) FROM stdin;
f	\N	074629f4-f4d6-42b9-b778-a4f9526f884d	2	t	2023-05-12 13:58:53.969+05:30	2023-05-12 13:58:53.969+05:30	3f7cbd32-8b06-43ff-9d2c-d9f6afbe3eee	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	14cb4b95-0999-4c3d-a358-55d8844334b2	3	t	2023-04-27 15:47:33.807+05:30	2023-04-27 15:47:33.807+05:30	a14a3c5e-0ebb-4952-a677-272396dd0c80	5329de0b-0b3f-4d78-a80f-4997e2d3399e
f	\N	3b2a50de-1abe-42ef-8e65-f9da03dbceb6	1	t	2023-04-29 11:18:01.252+05:30	2023-04-29 11:18:01.253+05:30	2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	3b5fc26c-f7fe-4d15-a236-caa7fb23df4e	1	t	2023-04-28 09:57:58.341+05:30	2023-04-28 09:57:58.341+05:30	e959cb27-a5b1-4d78-a243-c2e34c819326	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	3ba5ac79-1dba-4c37-8bbc-5e0792e3dc15	2	t	2023-04-28 08:31:17.698+05:30	2023-04-28 08:31:17.698+05:30	b0be784f-b2fe-4663-a12c-aa2edb87aa57	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	43bb357a-de77-42d5-83cc-26abc262b775	1	t	2023-04-28 08:31:17.692+05:30	2023-04-28 08:31:17.692+05:30	b0be784f-b2fe-4663-a12c-aa2edb87aa57	c48b113c-17c1-4140-9da3-8ff91550e2cb
f	\N	43bfc6e0-7dfa-44c9-b33d-1d425cc29f2d	1	t	2023-05-29 09:07:32.647+05:30	2023-05-29 09:07:32.647+05:30	2712444c-7e31-41bd-bcb5-18c854db65e6	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e
f	\N	4778cf2e-0462-425b-82f9-714fb33e5bff	1	t	2023-04-27 15:47:33.794+05:30	2023-04-27 15:47:33.794+05:30	a14a3c5e-0ebb-4952-a677-272396dd0c80	c48b113c-17c1-4140-9da3-8ff91550e2cb
f	\N	4ea08705-a19a-4600-a607-aa71f5fedc64	1	t	2023-05-29 13:46:39.318+05:30	2023-05-29 13:46:39.318+05:30	98101ac8-1087-4c32-a8cc-7ad60d7fcfa3	8a1cf8ff-a494-4696-880d-bd201d1c6a95
f	\N	523d389a-2c41-49e2-bcb9-19305a0a37c2	1	t	2023-05-06 16:59:45.678+05:30	2023-05-06 16:59:45.679+05:30	ddacff64-bdac-486f-ac18-d298fd5abda1	30854b3e-2544-414c-a37b-b7f76754347f
f	\N	54450cb8-20ee-405c-b0a8-dee90b495209	1	t	2023-05-05 11:16:45.134+05:30	2023-05-05 11:16:45.134+05:30	53bc7e0b-1361-40a9-91c5-400fe99819d5	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	5a86c06c-c235-4394-945d-3610e781f962	1	t	2023-04-29 09:03:07.036+05:30	2023-04-29 09:03:07.037+05:30	8b19e4f7-4286-48ec-9843-17251642e8c3	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	5dad3962-628e-4d98-bf8d-6b9e5723fb8a	2	t	2023-05-29 09:07:32.653+05:30	2023-05-29 09:07:32.653+05:30	2712444c-7e31-41bd-bcb5-18c854db65e6	d80314bc-994c-45b5-95c3-d6f875805c4e
f	\N	67596c3a-d7e6-4b51-af11-8266897eb12d	1	t	2023-05-12 13:58:53.964+05:30	2023-05-12 13:58:53.964+05:30	3f7cbd32-8b06-43ff-9d2c-d9f6afbe3eee	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	746d7096-cc92-46d5-aa10-dbbcbf6152a5	1	t	2023-05-05 11:16:11.805+05:30	2023-05-05 11:16:11.805+05:30	388aca11-8e04-48a0-b95f-418de87c816a	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e
f	\N	883ae0df-d22d-428e-b302-03661812f53b	2	t	2023-04-27 15:47:33.801+05:30	2023-04-27 15:47:33.801+05:30	a14a3c5e-0ebb-4952-a677-272396dd0c80	5ea96c09-d677-43af-9ac7-c3ee3b81cda3
f	\N	8c4d2169-7f77-4e07-86d8-16a688cdf27c	3	t	2023-04-27 19:30:54.606+05:30	2023-04-27 19:30:54.606+05:30	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	5ea96c09-d677-43af-9ac7-c3ee3b81cda3
f	\N	93aa1648-3ae7-47ce-8793-2e4e7611a81e	2	t	2023-04-29 08:52:29.109+05:30	2023-04-29 08:52:29.109+05:30	c36d8fe0-d645-43ee-8848-545911d52052	5ea96c09-d677-43af-9ac7-c3ee3b81cda3
f	\N	a1592e38-6e22-4b42-ac18-c638cec6932c	1	t	2023-04-27 19:30:54.307+05:30	2023-04-27 19:30:54.307+05:30	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	c11f8772-8a69-49e3-ba7b-31a2f4ee96da	2	t	2023-05-06 16:59:45.684+05:30	2023-05-06 16:59:45.684+05:30	ddacff64-bdac-486f-ac18-d298fd5abda1	3bd47192-a59f-4a3d-9416-962249559f4f
f	\N	ca72b300-d7be-4172-bb09-a4a65beca0fd	1	t	2023-04-28 09:42:25.126+05:30	2023-04-28 09:42:25.126+05:30	09fd9f37-6711-476e-9ff0-52d2410c57aa	d264aeac-938d-4e80-b049-220330cb9fac
f	\N	d7a127c1-182c-40b5-9556-fad93996d240	2	t	2023-04-28 09:57:58.347+05:30	2023-04-28 09:57:58.347+05:30	e959cb27-a5b1-4d78-a243-c2e34c819326	8a1cf8ff-a494-4696-880d-bd201d1c6a95
f	\N	e50310c4-9ec4-4f09-b2fe-92323dc0ebbe	1	t	2023-04-29 09:05:37.948+05:30	2023-04-29 09:05:37.948+05:30	85ded327-9dd0-420b-b32b-c953342f00f2	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	eb0068c7-1400-4445-bd2b-0d17fead9bba	2	t	2023-04-29 11:18:01.261+05:30	2023-04-29 11:18:01.261+05:30	2bbb8dd7-cba6-4038-aec8-3f3a0fe8446d	c48b113c-17c1-4140-9da3-8ff91550e2cb
f	\N	ec1c5f25-7d26-4385-9efc-ceb289d431ba	2	t	2023-04-27 19:30:54.464+05:30	2023-04-27 19:30:54.464+05:30	f2aa9ff7-d173-4681-adf3-102ff1aeacc6	41f53fc1-a05a-473a-8c08-d8f05531825d
f	\N	f4796393-2baf-44d2-bb07-d2652d0d01c3	2	t	2023-04-29 09:05:37.955+05:30	2023-04-29 09:05:37.955+05:30	85ded327-9dd0-420b-b32b-c953342f00f2	e5f30a53-d5e4-4b14-bdf7-a734d4fddf5f
f	\N	f9df3a6e-6955-4432-b220-dc94fec22789	2	t	2023-04-28 09:42:25.135+05:30	2023-04-28 09:42:25.135+05:30	09fd9f37-6711-476e-9ff0-52d2410c57aa	d80314bc-994c-45b5-95c3-d6f875805c4e
f	\N	fda84bfd-fd27-42a1-803c-5fa6908404b8	1	t	2023-04-29 08:52:29.103+05:30	2023-04-29 08:52:29.103+05:30	c36d8fe0-d645-43ee-8848-545911d52052	9b75c8a6-a218-4fc4-97f7-1a7cc00ad71e
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: linuxhint
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: linuxhint
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: linuxhint
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 48, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: linuxhint
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 314, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: linuxhint
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 12, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: linuxhint
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 29, true);


--
-- Name: account_user account_user_email_key; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.account_user
    ADD CONSTRAINT account_user_email_key UNIQUE (email);


--
-- Name: account_user account_user_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.account_user
    ADD CONSTRAINT account_user_pkey PRIMARY KEY (id);


--
-- Name: attendee_attendexam attendee_attendexam_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.attendee_attendexam
    ADD CONSTRAINT attendee_attendexam_pkey PRIMARY KEY (id);


--
-- Name: attendee_attendquestion attendee_attendquestion_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.attendee_attendquestion
    ADD CONSTRAINT attendee_attendquestion_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: author_question author_question_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.author_question
    ADD CONSTRAINT author_question_pkey PRIMARY KEY (id);


--
-- Name: author_testcase author_testcase_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.author_testcase
    ADD CONSTRAINT author_testcase_pkey PRIMARY KEY (id);


--
-- Name: author_testcase author_testcase_question_id_number_334a153c_uniq; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.author_testcase
    ADD CONSTRAINT author_testcase_question_id_number_334a153c_uniq UNIQUE (question_id, number);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: examiner_exam examiner_exam_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.examiner_exam
    ADD CONSTRAINT examiner_exam_pkey PRIMARY KEY (id);


--
-- Name: examiner_examquestion examiner_examquestion_pkey; Type: CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.examiner_examquestion
    ADD CONSTRAINT examiner_examquestion_pkey PRIMARY KEY (id);


--
-- Name: account_user_email_0bd7c421_like; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX account_user_email_0bd7c421_like ON public.account_user USING btree (email varchar_pattern_ops);


--
-- Name: attendee_attendexam_attendee_id_524b8a83; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX attendee_attendexam_attendee_id_524b8a83 ON public.attendee_attendexam USING btree (attendee_id);


--
-- Name: attendee_attendexam_exam_id_eb2318ea; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX attendee_attendexam_exam_id_eb2318ea ON public.attendee_attendexam USING btree (exam_id);


--
-- Name: attendee_attendquestion_attend_exam_id_e80feb73; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX attendee_attendquestion_attend_exam_id_e80feb73 ON public.attendee_attendquestion USING btree (attend_exam_id);


--
-- Name: attendee_attendquestion_question_id_08157dcb; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX attendee_attendquestion_question_id_08157dcb ON public.attendee_attendquestion USING btree (question_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: author_question_created_by_id_530e4582; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX author_question_created_by_id_530e4582 ON public.author_question USING btree (created_by_id);


--
-- Name: author_testcase_question_id_61e2e109; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX author_testcase_question_id_61e2e109 ON public.author_testcase USING btree (question_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: examiner_exam_created_by_id_5ccbbbcf; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX examiner_exam_created_by_id_5ccbbbcf ON public.examiner_exam USING btree (created_by_id);


--
-- Name: examiner_examquestion_exam_id_58db0c7b; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX examiner_examquestion_exam_id_58db0c7b ON public.examiner_examquestion USING btree (exam_id);


--
-- Name: examiner_examquestion_question_id_2b83384e; Type: INDEX; Schema: public; Owner: linuxhint
--

CREATE INDEX examiner_examquestion_question_id_2b83384e ON public.examiner_examquestion USING btree (question_id);


--
-- Name: attendee_attendexam attendee_attendexam_attendee_id_524b8a83_fk_account_user_id; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.attendee_attendexam
    ADD CONSTRAINT attendee_attendexam_attendee_id_524b8a83_fk_account_user_id FOREIGN KEY (attendee_id) REFERENCES public.account_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: attendee_attendexam attendee_attendexam_exam_id_eb2318ea_fk_examiner_exam_id; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.attendee_attendexam
    ADD CONSTRAINT attendee_attendexam_exam_id_eb2318ea_fk_examiner_exam_id FOREIGN KEY (exam_id) REFERENCES public.examiner_exam(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: attendee_attendquestion attendee_attendquest_attend_exam_id_e80feb73_fk_attendee_; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.attendee_attendquestion
    ADD CONSTRAINT attendee_attendquest_attend_exam_id_e80feb73_fk_attendee_ FOREIGN KEY (attend_exam_id) REFERENCES public.attendee_attendexam(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: attendee_attendquestion attendee_attendquest_question_id_08157dcb_fk_author_qu; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.attendee_attendquestion
    ADD CONSTRAINT attendee_attendquest_question_id_08157dcb_fk_author_qu FOREIGN KEY (question_id) REFERENCES public.author_question(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: author_question author_question_created_by_id_530e4582_fk_account_user_id; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.author_question
    ADD CONSTRAINT author_question_created_by_id_530e4582_fk_account_user_id FOREIGN KEY (created_by_id) REFERENCES public.account_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: author_testcase author_testcase_question_id_61e2e109_fk_author_question_id; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.author_testcase
    ADD CONSTRAINT author_testcase_question_id_61e2e109_fk_author_question_id FOREIGN KEY (question_id) REFERENCES public.author_question(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_account_user_id; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_account_user_id FOREIGN KEY (user_id) REFERENCES public.account_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: examiner_exam examiner_exam_created_by_id_5ccbbbcf_fk_account_user_id; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.examiner_exam
    ADD CONSTRAINT examiner_exam_created_by_id_5ccbbbcf_fk_account_user_id FOREIGN KEY (created_by_id) REFERENCES public.account_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: examiner_examquestion examiner_examquestio_question_id_2b83384e_fk_author_qu; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.examiner_examquestion
    ADD CONSTRAINT examiner_examquestio_question_id_2b83384e_fk_author_qu FOREIGN KEY (question_id) REFERENCES public.author_question(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: examiner_examquestion examiner_examquestion_exam_id_58db0c7b_fk_examiner_exam_id; Type: FK CONSTRAINT; Schema: public; Owner: linuxhint
--

ALTER TABLE ONLY public.examiner_examquestion
    ADD CONSTRAINT examiner_examquestion_exam_id_58db0c7b_fk_examiner_exam_id FOREIGN KEY (exam_id) REFERENCES public.examiner_exam(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

